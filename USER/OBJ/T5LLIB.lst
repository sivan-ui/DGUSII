C51 COMPILER V9.60.0.0   T5LLIB                                                            11/02/2023 16:36:09 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE T5LLIB
OBJECT MODULE PLACED IN .\OBJ\T5LLIB.obj
COMPILER INVOKED BY: C:\Keil_C51\C51\BIN\C51.EXE T5LLIB.C LARGE OMF2 OPTIMIZE(9,SIZE) BROWSE INCDIR(..\USER;..\FUNC_HAND
                    -LER;..\GUI_APP) DEBUG PRINT(.\OBJ\T5LLIB.lst) TABS(2) OBJECT(.\OBJ\T5LLIB.obj)

line level    source

   1          #include "T5LLIB.h"
   2          #include "t5los8051.h"
   3          
   4          // 检查指定DGUS变量地址的DATA3清零的话就退出
   5          void wait_ok(unsigned int addr)
   6          {
   7   1        ADR_H = 0x00;
   8   1        ADR_M = (unsigned char)(addr >> 8);
   9   1        ADR_L = (unsigned char)(addr);
  10   1        ADR_INC = 0x00;
  11   1        do
  12   1        {
  13   2          for (addr = 0; addr < 1000; addr++) // 释放变量空间一段时间
  14   2          {
  15   3            DATA2 = DATA1;
  16   3          }
  17   2          RAMMODE = 0xAF;
  18   2          while (APP_ACK == 0)
  19   2            ;
  20   2          APP_EN = 1;
  21   2          while (APP_EN == 1)
  22   2            ;
  23   2          RAMMODE = 0x00;
  24   2        } while (DATA3 != 0);
  25   1      }
  26          
  27          // 读写T5L片内256KW Flash，mod=0x5A read from flash读取，mod=0xA5为write to flash
  28          // addr=DGUS变量地址，必须是偶数；addr_flash=flash读取地址，必须是偶数；len=读取字长度，必须是偶数。
  29          void T5L_Flash(unsigned char mod, unsigned int addr, long addr_flash, unsigned int len)
  30          {
  31   1        ADR_H = 0x00;
  32   1        ADR_M = 0x00;
  33   1        ADR_L = 0x04;
  34   1        ADR_INC = 0x01;
  35   1        RAMMODE = 0x8F; // 启动读Flash
  36   1        while (APP_ACK == 0)
  37   1          ;
  38   1        DATA3 = mod;
  39   1        DATA2 = (unsigned char)(addr_flash >> 16);
  40   1        DATA1 = (unsigned char)(addr_flash >> 8);
  41   1        DATA0 = (unsigned char)(addr_flash & 0xFE);
  42   1        APP_EN = 1;
  43   1        while (APP_EN == 1)
  44   1          ;
  45   1        DATA3 = (unsigned char)(addr >> 8);
  46   1        DATA2 = (unsigned char)(addr & 0xFE);
  47   1        DATA1 = (unsigned char)(len >> 8);
  48   1        DATA0 = (unsigned char)(len & 0xFE);
  49   1        APP_EN = 1;
  50   1        while (APP_EN == 1)
  51   1          ;
  52   1        RAMMODE = 0x00;
  53   1        wait_ok(0x0004);
  54   1      } // 等待数据读取OK
C51 COMPILER V9.60.0.0   T5LLIB                                                            11/02/2023 16:36:09 PAGE 2   

  55          
  56          // 读取DGUS变量数据 addr=DGUS变量地址  *buf=数据返回指针  len=读取数据字长度
  57          void read_dgusii_vp(unsigned int addr, unsigned char *buf, unsigned int len)
  58          {
  59   1        unsigned char i;
  60   1        i = (unsigned char)(addr & 0x01);
  61   1        addr = addr / 2;
  62   1        ADR_H = 0x00;
  63   1        ADR_M = (unsigned char)(addr >> 8);
  64   1        ADR_L = (unsigned char)(addr);
  65   1        ADR_INC = 0x01;
  66   1        RAMMODE = 0xAF;
  67   1        while (APP_ACK == 0)
  68   1          ;
  69   1        while (len > 0)
  70   1        {
  71   2          APP_EN = 1;
  72   2          while (APP_EN == 1)
  73   2            ;
  74   2          if ((i == 0) && (len > 0))
  75   2          {
  76   3            *buf++ = DATA3;
  77   3            *buf++ = DATA2;
  78   3            i = 1;
  79   3            len--;
  80   3          }
  81   2          if ((i == 1) && (len > 0))
  82   2          {
  83   3            *buf++ = DATA1;
  84   3            *buf++ = DATA0;
  85   3            i = 0;
  86   3            len--;
  87   3          }
  88   2        }
  89   1        RAMMODE = 0x00;
  90   1      }
  91          
  92          // 写DGUS变量数据 addr=DGUS变量地址  *buf=写入数据指针  len=写入数据字长度
  93          void write_dgusii_vp(unsigned int addr, unsigned char *buf, unsigned int len)
  94          {
  95   1        unsigned char i;
  96   1        i = (unsigned char)(addr & 0x01);
  97   1        addr = addr / 2;
  98   1        ADR_H = 0x00;
  99   1        ADR_M = (unsigned char)(addr >> 8);
 100   1        ADR_L = (unsigned char)(addr);
 101   1        ADR_INC = 0x01;
 102   1        RAMMODE = 0x8F;
 103   1        while (APP_ACK == 0)
 104   1          ;
 105   1        if (i && len > 0)
 106   1        {
 107   2          RAMMODE = 0x83;
 108   2          DATA1 = *buf++;
 109   2          DATA0 = *buf++;
 110   2          APP_EN = 1;
 111   2          while (APP_EN == 1)
 112   2            ;
 113   2          len--;
 114   2        }
 115   1        RAMMODE = 0x8F;
 116   1        while (len >= 2)
C51 COMPILER V9.60.0.0   T5LLIB                                                            11/02/2023 16:36:09 PAGE 3   

 117   1        {
 118   2          DATA3 = *buf++;
 119   2          DATA2 = *buf++;
 120   2          DATA1 = *buf++;
 121   2          DATA0 = *buf++;
 122   2          APP_EN = 1;
 123   2          while (APP_EN == 1)
 124   2            ;
 125   2          len = len - 2;
 126   2        }
 127   1        if (len)
 128   1        {
 129   2          RAMMODE = 0x8C;
 130   2          DATA3 = *buf++;
 131   2          DATA2 = *buf++;
 132   2          APP_EN = 1;
 133   2          while (APP_EN == 1)
 134   2            ;
 135   2        }
 136   1        RAMMODE = 0x00;
 137   1      }
 138          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    459    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      23
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
