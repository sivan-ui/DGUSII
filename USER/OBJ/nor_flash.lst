C51 COMPILER V9.60.0.0   NOR_FLASH                                                         11/04/2023 11:13:37 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE NOR_FLASH
OBJECT MODULE PLACED IN .\OBJ\nor_flash.obj
COMPILER INVOKED BY: C:\Keil_C51\C51\BIN\C51.EXE nor_flash.c LARGE OMF2 OPTIMIZE(9,SIZE) BROWSE INCDIR(..\USER;..\FUNC_H
                    -ANDLER;..\GUI_APP) DEBUG PRINT(.\OBJ\nor_flash.lst) TABS(2) OBJECT(.\OBJ\nor_flash.obj)

line level    source

   1          /*
   2           * @Author: xw.qu
   3           * @Date: 2023-08-31 09:22:42
   4           * @LastEditors: xw.qu
   5           * @LastEditTime: 2023-08-31 10:49:03
   6           * @FilePath: \USER\nor_flash.c
   7           * @Description: flash write read
   8           * 
   9           * Copyright (c) 2023 by xw.qu, All Rights Reserved. 
  10           */
  11          
  12          #include "nor_flash.h"
  13          
  14          
  15          
  16          xdata u8 norflash_cmd[8];
  17          
  18          
  19          //向T5L内部自带的nor flash写入数据
  20          //addr:nor flash的地址,必须为偶数,范围为:0x000000-0x027FFE,然后一个地址对应2个字节,即总容量为320KB
  21          //buff:需要写入的缓冲区,长度至少大于len*2
  22          //len:写入的字数,必须为偶数,而且写入的最大长度也有限制,这个跟CACHE_ADDR的值有关系
  23          void norflash_write(u32 addr,u8* buff,u16 len)
  24          {
  25   1        EA = 0;//关中断
  26   1        //1.先把buff中的数据写入到DGUSII可用变量区(CACHE_ADDR)缓存一下
  27   1        write_dgusii_vp(CACHE_ADDR,buff,len);
  28   1        
  29   1        //2.然后再把CACHE_ADDR处的内容写入到nor flash中
  30   1        norflash_cmd[0] = NOR_FLASH_WRITE;//写操作
  31   1        norflash_cmd[1] = (addr>>16)&0xff;//nor flash地址
  32   1        norflash_cmd[2] = (addr>>8)&0xff;
  33   1        norflash_cmd[3] = addr&0xff;
  34   1        norflash_cmd[4] = (CACHE_ADDR>>8)&0xff;//dgusii数据地址
  35   1        norflash_cmd[5] = CACHE_ADDR&0xff;
  36   1        norflash_cmd[6] = (len>>8)&0xff;//写入的数据长度
  37   1        norflash_cmd[7] = len&0xff;
  38   1        write_dgusii_vp(NOR_FLASH_ADDR,norflash_cmd,4);
  39   1        
  40   1        //3.等待操作完成
  41   1        while(1)
  42   1        {
  43   2          read_dgusii_vp(NOR_FLASH_ADDR,norflash_cmd,2);//只需读取0x0008变量的前2个字,然后判断D7是否为0
  44   2          if(norflash_cmd[0]==0)
  45   2            break;
  46   2          sys_delay_about_ms(1);//这个延时必须加,可以防止莫名其妙的错误
  47   2        }
  48   1        EA = 1;//开中断
  49   1      }
  50          
  51          
  52          
  53          //向T5L内部自带的nor flash读取数据
  54          //addr:nor flash的地址,必须为偶数,范围为:0x000000-0x027FFE,然后一个地址对应2个字节,即总容量为320KB
C51 COMPILER V9.60.0.0   NOR_FLASH                                                         11/04/2023 11:13:37 PAGE 2   

  55          //buff:需要读入的缓冲区,长度至少大于len*2
  56          //len:读取的字数,必须为偶数,而且写入的最大长度也有限制,这个跟CACHE_ADDR的值有关系
  57          void norflash_read(u32 addr,u8* buff,u16 len)
  58          {
  59   1        //1.把nor flash中的内容读取到CACHE_ADDR
  60   1        norflash_cmd[0] = NOR_FLASH_READ;//读操作
  61   1        norflash_cmd[1] = (addr>>16)&0xff;//nor flash地址
  62   1        norflash_cmd[2] = (addr>>8)&0xff;
  63   1        norflash_cmd[3] = addr&0xff;
  64   1        norflash_cmd[4] = (CACHE_ADDR>>8)&0xff;//dgusii数据地址
  65   1        norflash_cmd[5] = CACHE_ADDR&0xff;
  66   1        norflash_cmd[6] = (len>>8)&0xff;//写入的数据长度
  67   1        norflash_cmd[7] = len&0xff;
  68   1        write_dgusii_vp(NOR_FLASH_ADDR,norflash_cmd,4);
  69   1        
  70   1        //2.等待操作完成
  71   1        while(1)
  72   1        {
  73   2          read_dgusii_vp(NOR_FLASH_ADDR,norflash_cmd,2);//只需读取0x0008变量的前4个字节,然后判断D7是否为0
  74   2          if(norflash_cmd[0]==0)
  75   2            break;
  76   2          sys_delay_about_ms(1);//这个延时必须加,可以防止莫名其妙的错误
  77   2        }
  78   1        
  79   1        //3.再把CACHE_ADDR处的数据读取到buff中
  80   1        read_dgusii_vp(CACHE_ADDR,buff,len);
  81   1      }
  82          
  83          
  84          
  85          
  86          
  87          
  88          
  89          
  90          
  91          
  92          
  93          
  94          
  95          
  96          
  97          
  98          
  99          
 100          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    281    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      8      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
