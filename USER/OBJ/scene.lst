C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SCENE
OBJECT MODULE PLACED IN .\OBJ\scene.obj
COMPILER INVOKED BY: C:\Keil_C51\C51\BIN\C51.EXE scene.c LARGE OMF2 OPTIMIZE(9,SIZE) BROWSE INCDIR(..\USER;..\FUNC_HANDL
                    -ER;..\GUI_APP) DEBUG PRINT(.\OBJ\scene.lst) TABS(2) OBJECT(.\OBJ\scene.obj)

line level    source

   1          /*
   2           * @Author: xw.qu
   3           * @Date: 2023-08-31 09:22:42
   4           * @LastEditors: xw.qu
   5           * @LastEditTime: 2023-09-27 16:47:10
   6           * @FilePath: \USER\scene.c
   7           * @Description: module scene modify
   8           *
   9           * Copyright (c) 2023 by xw.qu, All Rights Reserved.
  10           */
  11          #include "scene.h"
  12          #include "sys.h"
  13          #include "T5LLIB.h"
  14          #include "time_scene.h"
  15          // unsigned short mbHost.scene_send_cyc_time;
  16          name_scene_t module_scene; //
  17          scenc_infor_t scenc_infor; //
  18          scenc_infor_t temp_scenc_infor[SCENE_NUB_SIGNLE];
  19          scene_data_t scene_data;
  20          unsigned char module_scene_select_key_bak[8] = {0};
  21          unsigned char temp_module_index = 0;
  22          unsigned char infor_clear_sta = 0;
  23          unsigned char scene_vaild[8] = {0};
  24          // unsigned char name_space[16] = "";
  25          unsigned char name_space[140] = "";
  26          unsigned short scene_name_key_nb_bak = 0;
  27          unsigned char scene_name_select_sta_bak = 0;
  28          unsigned short scene_infor_key_nb_bak = 0;
  29          unsigned char scene_infor_select_sta_bak = 0;
  30          unsigned char scene_infor_page = 0;
  31          void pop_menu_key_ctrl(unsigned char menu_key_value);
  32          // static void get_led_set_sta(unsigned short *led_enable,unsigned short *led_sta);
  33          // module_infor_t temp_module_infor[SCENE_NUB_SIGNLE];
  34          // ªÒ»°≥°æ∞√˚◊÷±‡º≠◊¥Ã¨
  35          unsigned char get_module_scene_edit_sta(void)
  36          {
  37   1        // USER_PRINTF("name_scene.edit_sta is %bd\n", module_scene.edit_sta);
  38   1        return module_scene.edit_sta;
  39   1      }
  40          // ªÒ»°ƒ£øÈ±‡º≠◊¥Ã¨
  41          unsigned char *get_module_scene_module_select(void)
  42          {
  43   1        //  USER_PRINTF("name_scene.edit_sta is %bd\n",module_scene.edit_sta);
  44   1        printf_tab(8, &module_scene.module_select[0]);
  45   1        return &module_scene.module_select[0];
  46   1      }
  47          void scene_init(scenc_infor_t *p_scenc_infor, name_scene_t *p)
  48          {
  49   1        p->scene_name_index = 1;
  50   1        p->edit_sta = 1;
  51   1        p_scenc_infor->edit_sta = 1;
  52   1        p_scenc_infor->index = 1;
  53   1      }
  54          void printf_temp_scenc_infor(unsigned char index)
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 2   

  55          {
  56   1        unsigned char i = 0;
  57   1        for (i = 0; i < index; i++)
  58   1        {
  59   2          //    USER_PRINTF("temp_scenc_infor[%bd].edit_sta is %bd,data_sta is %bd,type is %bd,index is %d,adr is %b
             -d,led_enable is %d,led_sta is %d\n",i,temp_scenc_infor[i].edit_sta,temp_scenc_infor[i].data_sta,temp_scenc_infor[i].type
             -,temp_scenc_infor[i].index,temp_scenc_infor[i].adr,temp_scenc_infor[i].led_enable,temp_scenc_infor[i].led_sta);
  60   2        }
  61   1      }
  62          // «Â≥˝µ•—°øÚ
  63          void clear_single_module_var_en(unsigned short adr)
  64          {
  65   1        write_dgus(adr, 0);
  66   1      }
  67          // «Â≥˝À˘”–µ•—°øÚ
  68          void clear_all_module_var_en(unsigned short adr, unsigned char len)
  69          {
  70   1        unsigned char i = 0;
  71   1        for (i = 0; i < len; i++)
  72   1        {
  73   2          clear_single_module_var_en(adr + i);
  74   2        }
  75   1      }
  76          // «Âø’¡Ÿ ±±‰¡ø≥°æ∞–≈œ¢ƒ⁄»›
  77          void clear_temp_scenc_infor(void)
  78          {
  79   1        memset((unsigned char *)temp_scenc_infor, 0, sizeof(scenc_infor_t) * SCENE_NAME_NUB);
  80   1      }
  81          // ªÒ»°ø’∞◊≥°æ∞√˚◊÷–Ú∫≈
  82          unsigned char get_blank_scene_name_index(void)
  83          {
  84   1        // return find_index(SCENE_NAME_FLASH_ADR_SATRT,NAME_SCENE_T_SIZE,SCENE_NAME_NUB);
  85   1        unsigned char i = 0;
  86   1        unsigned short temp_data = 0;
  87   1        for (i = 0; i < SCENE_NAME_NUB; i++)
  88   1        {
  89   2          read_dgusii_vp(0x4100 + i * 32, (unsigned char *)&temp_data, 1);
  90   2          if (0 == temp_data)
  91   2            return i;
  92   2        }
  93   1        return 0xff;
  94   1      }
  95          // ≈–∂œ≥°æ∞À˘”––≈œ¢ƒ⁄»› «Œ™ø’
  96          unsigned char if_all_scene_infor_blank(void)
  97          {
  98   1        unsigned char i = 0;
  99   1        unsigned short temp_data = 0;
 100   1        for (i = 0; i < SCENE_NUB_SIGNLE; i++)
 101   1        {
 102   2          //    read_dgusii_vp(0x5000+i*70,(unsigned char *)&temp_data,1);
 103   2          if (1 == temp_scenc_infor[i].data_sta)
 104   2            return i;
 105   2        }
 106   1        return 0xff;
 107   1      }
 108          // «Âø’“ª∏ˆ≥°æ∞–≈œ¢ƒ⁄»›
 109          void clear_single_scene(unsigned char index)
 110          {
 111   1      
 112   1        write_dgusii_vp(0x5000 + index * 70, (unsigned char *)&name_space, 70);
 113   1      }
 114          // «Âø’À˘”–≥°æ∞–≈œ¢ƒ⁄»›
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 3   

 115          void clear_all_scene_infor(void)
 116          {
 117   1        unsigned char i = 0;
 118   1        for (i = 0; i < SCENE_NUB_SIGNLE; i++)
 119   1        {
 120   2          clear_single_scene(i);
 121   2        }
 122   1      }
 123          // ªÒ»°ø’∞◊µƒ≥°æ∞ƒ⁄»›–Ú∫≈
 124          unsigned char get_blank_scene_infor_index(void)
 125          {
 126   1        // return find_index(SCENE_INFOR_FLASH_ADR_SATRT,SCENC_INFOR_T_SIZE,SCENE_NUB);
 127   1        unsigned char i = 0;
 128   1        //  unsigned short temp_data = 0;
 129   1        for (i = 0; i < SCENE_NUB_SIGNLE; i++)
 130   1        {
 131   2          //    read_dgusii_vp(0x5000+i*70,(unsigned char *)&temp_data,1);
 132   2          //    USER_PRINTF("-->temp_data_value is %d\n",temp_data);
 133   2          if ((0 == temp_scenc_infor[i].data_sta)) //&&( 1 == temp_scenc_infor[i].edit_sta)
 134   2            return i;
 135   2        }
 136   1        return 0xff;
 137   1      }
 138          // ªÒ»°≥°æ∞–≈œ¢—°÷––Ú∫≈
 139          unsigned char get_scene_infor_select_sequence_number(void)
 140          {
 141   1      
 142   1        // return get_selected_sequence_number(0x1060,8);
 143   1        return get_box_select_number(0x1900, 64);
 144   1      }
 145          // …Ë∂®≥°æ∞–≈œ¢—°÷––Ú∫≈
 146          void set_scene_infor_select_sequence_number(void)
 147          {
 148   1        //  set_selected_sequence_number(0x1070,0x1060,8);
 149   1        set_box_select(0x1070, 0x1900, 64, &scene_infor_key_nb_bak, &scene_infor_select_sta_bak);
 150   1      }
 151          // ªÒ»°≥°æ∞√˚≥∆—°÷––Ú∫≈
 152          unsigned char get_scene_name_select_sequence_number(void)
 153          {
 154   1        // return get_selected_sequence_number(0x1068,8);
 155   1        return get_box_select_number(SCENE_NAME_LIST_SELECT_ADR, 64);
 156   1      }
 157          // …Ë∂®≥°æ∞√˚≥∆—°÷––Ú∫≈
 158          void set_scene_name_select_sequence_number(void)
 159          {
 160   1        // set_selected_sequence_number(0x102f,0x1068,8);
 161   1        set_box_select(0x102f, SCENE_NAME_LIST_SELECT_ADR, 64, &scene_name_key_nb_bak, &scene_name_select_sta_bak
             -);
 162   1      }
 163          // ≈–∂œ÷∏∂®≥°æ∞ «∑Ò¥Ê‘⁄
 164          unsigned char if_scene_name_exists(unsigned char index)
 165          {
 166   1        unsigned short temp_dat = 0;
 167   1        read_dgusii_vp(0x4100 + index * 32, (unsigned char *)&temp_dat, 1);
 168   1        ;
 169   1        if (0 == temp_dat)
 170   1        {
 171   2          return BLANK;
 172   2        }
 173   1        else
 174   1        {
 175   2          return FULL;
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 4   

 176   2        }
 177   1      }
 178          // ≈–∂œ≥°æ∞√˚◊÷ «∑Ò≤ª¥Ê‘⁄
 179          unsigned char if_all_scene_name_blank(void)
 180          {
 181   1        unsigned char i = 0;
 182   1        for (i = 0; i < SCENE_NAME_NUB; i++)
 183   1        {
 184   2          if (FULL == if_scene_name_exists(i))
 185   2          {
 186   3            return i;
 187   3          }
 188   2        }
 189   1        return 0xff;
 190   1      }
 191          // ¥Ê¥¢≥°æ∞√˚≥∆
 192          void scene_name_save_flash(name_scene_t *p)
 193          {
 194   1        //  p->data_sta = FULL;//…Ë÷√ ˝æ›
 195   1        //  p->scene_name_index = index;//…Ë÷√≥°æ∞–Ú∫≈
 196   1        //  read_dgusii_vp(0x4089,(unsigned char *)&p->scene_name,8);//∂¡»°…Ë∂®µƒ≥°æ∞√˚≥∆
 197   1        norflash_write(SCENE_NAME_FLASH_ADR_SATRT + (p->scene_name_index - 1) * NAME_SCENE_T_SIZE, (unsigned char
             - *)p, NAME_SCENE_T_SIZE); // ¥ÊµΩflash
 198   1        //  write_dgusii_vp(0x4100+(p->scene_name_index-1)*32,(unsigned char *)&p->scene_name,8);//∆¡ƒªœ‘ æ≥°æ∞√˚≥
             -∆
 199   1        //  write_dgusii_vp(0x3320+(p->scene_name_index-1)*8,(unsigned char *)&p->scene_name,8);
 200   1      }
 201          // –¥≥°æ∞√˚≥∆
 202          void scene_name_write_dgusii(name_scene_t *p)
 203          {
 204   1        p->data_sta = FULL;                                                                           // …Ë÷√ ˝æ›
 205   1        read_dgusii_vp(0x4089, (unsigned char *)&p->scene_name, 8);                                   // ∂¡»°…Ë∂®µƒ≥°æ∞√˚≥∆
 206   1        write_dgusii_vp(0x4100 + (p->scene_name_index - 1) * 32, (unsigned char *)&p->scene_name, 8); // ∆¡ƒªœ‘ æ
             -≥°æ∞√˚≥∆
 207   1        write_dgusii_vp(0x3320 + (p->scene_name_index - 1) * 8, (unsigned char *)&p->scene_name, 8);
 208   1      }
 209          void scene_name_save(name_scene_t *p)
 210          {
 211   1        scene_name_write_dgusii(p);
 212   1        scene_name_save_flash(p);
 213   1      }
 214          //
 215          // ∂¡»°≥°æ∞√˚≥∆
 216          void scene_name_read_flash(name_scene_t *p, unsigned char index)
 217          {
 218   1        //  p->scene_name_index = index;//…Ë÷√≥°æ∞–Ú∫≈
 219   1      
 220   1        norflash_read(SCENE_NAME_FLASH_ADR_SATRT + index * NAME_SCENE_T_SIZE, (unsigned char *)p, NAME_SCENE_T_SI
             -ZE); // ∂¡≥°æ∞name≤Œ ˝
 221   1        write_dgusii_vp(0x4089, (unsigned char *)&p->scene_name, 8);                                                  // œ‘ æ…Ë∂®µƒ≥°æ∞√˚≥
             -∆
 222   1      }
 223          // …æ≥˝≥°æ∞¡–±Ì√˚≥∆
 224          void delete_scene_list_name(unsigned char index)
 225          {
 226   1      
 227   1        write_dgusii_vp(0x3320 + index * 8, (unsigned char *)&name_space, 8); // «Â≥˝≥°æ∞√˚◊÷
 228   1      }
 229          // «Âø’≥°æ∞¡–±Ì√˚≥∆
 230          void clear_scene_list_name(void)
 231          {
 232   1        unsigned char i = 0;
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 5   

 233   1        for (i = 0; i < SCENE_NUB_SIGNLE; i++ )
 234   1        {
 235   2          delete_scene_list_name(i);
 236   2        }
 237   1      }
 238          // …æ≥˝—°÷–µƒ≥°æ∞√˚≥∆
 239          void scene_name_delete_flash(unsigned char index)
 240          {
 241   1        //  unsigned char name_space[16] = "";
 242   1        T5L_Flash(0xA5, 0Xe000, SCENE_NAME_FLASH_ADR_SATRT + (index)*NAME_SCENE_T_SIZE, NAME_SCENE_T_SIZE);           
             -             // –¥0FLASHname«Â≥˝
 243   1        T5L_Flash(0x5A, 0X4100 + 32 * (index), SCENE_NAME_FLASH_ADR_SATRT + (index)*NAME_SCENE_T_SIZE, 32);           
             -             // ∂¡Œ™0≥°æ∞√˚≥∆–≈œ¢
 244   1        T5L_Flash(0xA5, 0Xe000, SCENE_INFOR_FLASH_ADR_SATRT + (index)*SINGLE_NAME_SCENC_INFOR_SIZE, SINGLE_NAME_S
             -CENC_INFOR_SIZE); // –¥0FLASHscencinfor«Â≥˝
 245   1      
 246   1        //  write_dgusii_vp(0x3320+index*8,(unsigned char *)&name_space,8);//«Â≥˝≥°æ∞√˚◊÷
 247   1        //  clear_all_module_var_en(SCENE_NAME_LIST_SELECT_ADR,SCENE_NAME_NUB);
 248   1      }
 249          void scene_edit_clear_infor(name_scene_t *p_module_scene)
 250          {
 251   1        clear_scene_list_name();                                                                                                                                    // «Â≥˝≥°æ∞–≈œ¢
             -¡–±Ì
 252   1        T5L_Flash(0xA5, 0Xe000, SCENE_INFOR_FLASH_ADR_SATRT + (p_module_scene->scene_name_index - 1) * SINGLE_NAM
             -E_SCENC_INFOR_SIZE, SINGLE_NAME_SCENC_INFOR_SIZE); // –¥0FLASHscencinfor«Â≥˝
 253   1        USER_PRINTF("clear_single_scene_name_flash \n");
 254   1        memset((unsigned char *)module_scene_select_key_bak, 0, 8);
 255   1        memset((unsigned char *)p_module_scene->module_select, 0, 8);
 256   1        p_module_scene->edit_sta = 2;
 257   1      }
 258          // «Â≥˝À˘”–≥°æ∞flash
 259          void scene_name_clear_flash(void)
 260          {
 261   1        unsigned char index = 0;
 262   1        if (0xff == if_all_scene_name_blank())
 263   1        {
 264   2          return;
 265   2        }
 266   1        for (index = 0; index < 12; index++)
 267   1        {
 268   2      
 269   2          T5L_Flash(0xA5, 0Xe000, SCENE_INFOR_FLASH_ADR_SATRT + (index)*0x1000, 0x1000); // –¥0FLASHscencinfor«Â≥˝
 270   2        }
 271   1        T5L_Flash(0xA5, 0Xe000, SCENE_NAME_FLASH_ADR_SATRT, SCENE_NAME_NUB * NAME_SCENE_T_SIZE); // –¥0FLASHname«
             -Â≥˝
 272   1        T5L_Flash(0x5A, 0X4100, SCENE_NAME_FLASH_ADR_SATRT, 32 * 64);                            // «Âø’≥°æ∞π‹¿Ì≥°æ∞√˚≥∆
 273   1        //  for(index = 0;index<SCENE_NAME_NUB;index++)
 274   1        //  {
 275   1        //    write_dgusii_vp(0x4100+(p->scene_name_index-1)*32,(unsigned char *)&p->scene_name,8);//∆¡ƒªœ‘ æ≥°æ∞√˚
             -≥∆
 276   1        //
 277   1        //  }
 278   1      }
 279          // ¥Ê¥¢≥°æ∞–≈œ¢ƒ⁄»›
 280          void scene_infor_save_flash(name_scene_t *p_module_scene)
 281          {
 282   1      
 283   1        //  p->index = index;//…Ë÷√≥°æ∞–≈œ¢±Í∫≈
 284   1        //  p->type  = p_module->type;
 285   1        //  p->adr   = p_module->adr;
 286   1        //  p->channel_nb = p_module->channel_nb;
 287   1        //  unsigned char index = 0;
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 6   

 288   1        //  index = (p_module_scene->scene_name_index-1);
 289   1        printf_temp_scenc_infor(10);
 290   1        norflash_write(SCENE_INFOR_FLASH_ADR_SATRT + (p_module_scene->scene_name_index - 1) * SINGLE_NAME_SCENC_I
             -NFOR_SIZE, (unsigned char *)(temp_scenc_infor), SINGLE_NAME_SCENC_INFOR_SIZE);
 291   1        USER_PRINTF("-->scene_infor_save_flash_success \n");
 292   1      }
 293          // «Âø’“ª∏ˆ≥°æ∞À˘”––≈œ¢ƒ⁄»›
 294          void scene_infor_clear_flash(scenc_infor_t *p)
 295          {
 296   1        T5L_Flash(0xA5, 0Xe000, SCENE_INFOR_FLASH_ADR_SATRT + (p->scene_infor_index - 1) * SINGLE_NAME_SCENC_INFO
             -R_SIZE, SINGLE_NAME_SCENC_INFOR_SIZE); // –¥0FLASHscencinfor«Â≥˝
 297   1        T5L_Flash(0x5A, 0X5000, SCENE_INFOR_FLASH_ADR_SATRT + (p->scene_infor_index - 1) * SINGLE_NAME_SCENC_INFO
             -R_SIZE, SINGLE_NAME_SCENC_INFOR_SIZE); // ∂¡Œ™0≥°æ∞–≈œ¢
 298   1        // USER_PRINTF("-->clear %bd scene all flash ok\n", p->scene_infor_index);
 299   1      }
 300          // …æ≥˝“ª∏ˆ≥°æ∞µ•∏ˆ–≈œ¢flash
 301          void scene_infor_delete_flash(scenc_infor_t *p)
 302          {
 303   1        T5L_Flash(0xA5, 0Xe000, SCENE_INFOR_FLASH_ADR_SATRT + (p->scene_infor_index - 1) * SINGLE_NAME_SCENC_INFO
             -R_SIZE + (p->index - 1) * SCENC_INFOR_T_SIZE, SCENC_INFOR_T_SIZE); // –¥0FLASH«Â≥˝
 304   1        //  T5L_Flash(0x5A,0X5000, SCENE_INFOR_FLASH_ADR_SATRT+(p->scene_infor_index-1)*SINGLE_NAME_SCENC_INFOR_SI
             -ZE+(p->index-1)*SCENC_INFOR_T_SIZE,SCENC_INFOR_T_SIZE); //∂¡Œ™0≥°æ∞–≈œ¢
 305   1        // USER_PRINTF("-->delete %bd scene %d infor flash ok\n", p->scene_infor_index, p->index);
 306   1      }
 307          // ƒ£øÈ≥°æ∞–≈œ¢œ‘ æ
 308          void module_scene_infor_dis(scenc_infor_t *p)
 309          {
 310   1        unsigned char i = 0;
 311   1        unsigned char temp_tab[32] = {0};
 312   1        switch (p->type)
 313   1        {
 314   2        case SINGLE_RELAY_MODULE:
 315   2        case SINGLE_TIME_RELAY_MODULE:
 316   2        case DOUBLE_RELAY_MODULE:
 317   2        case DOUBLE_TIME_RELAY_MODULE:
 318   2          for (i = 0; i < 16; i++)
 319   2          {
 320   3            temp_tab[2 * i + 1] = (p->led_enable >> i) & 0x1;
 321   3            ;
 322   3          }
 323   2          write_dgusii_vp(0x101c, (unsigned char *)&temp_tab, 16);
 324   2          for (i = 0; i < 16; i++)
 325   2          {
 326   3            temp_tab[2 * i + 1] = (p->led_sta >> i) & 0x1;
 327   3            ;
 328   3          }
 329   2          write_dgusii_vp(0x1040, (unsigned char *)&temp_tab, 16);
 330   2      
 331   2          break;
 332   2        case VOL_DIM_MODULE:
 333   2          for (i = 0; i < 4; i++)
 334   2          {
 335   3            temp_tab[2 * i + 1] = p->diming_enable >> i & 0x1;
 336   3          }
 337   2          write_dgusii_vp(0x1050, (unsigned char *)&temp_tab, 4);
 338   2          write_dgusii_vp(0x1054, (unsigned char *)&(p->dimming_duty[0]), 4);
 339   2      
 340   2          break;
 341   2        case SCR_DIM_MODULE:
 342   2          for (i = 0; i < 4; i++)
 343   2          {
 344   3            temp_tab[2 * i + 1] = p->diming_enable >> i & 0x1;
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 7   

 345   3          }
 346   2          write_dgusii_vp(0x1058, (unsigned char *)&temp_tab, 4);
 347   2      
 348   2          write_dgusii_vp(0x105c, (unsigned char *)&(p->dimming_duty[0]), 4);
 349   2      
 350   2          break;
 351   2        }
 352   1      }
 353          // œ‘ æºÃµÁ∆˜≥°æ∞ΩÁ√Ê
 354          void display_relay_scene_interface(module_t *p)
 355          {
 356   1        write_dgus(0x3f08, p->adr);
 357   1        write_dgus(0x3f09, p->channel_nb);
 358   1        write_dgusii_vp(0x3f00, (unsigned char *)&p->module_name, 8);
 359   1        write_dgusii_vp(0x3f0a, (unsigned char *)&p->channel_name, 8 * 16);
 360   1        // USER_PRINTF("display module index is %bd\n", p->index);
 361   1        switch (p->channel_nb)
 362   1        {
 363   2        case 4:
 364   2      
 365   2          pic_set(24);
 366   2          break;
 367   2        case 6:
 368   2      
 369   2          pic_set(25);
 370   2          break;
 371   2        case 8:
 372   2      
 373   2          pic_set(26);
 374   2          break;
 375   2        case 10:
 376   2      
 377   2          pic_set(27);
 378   2          break;
 379   2        case 12:
 380   2      
 381   2          pic_set(28);
 382   2          break;
 383   2        case 14:
 384   2      
 385   2          pic_set(29);
 386   2          break;
 387   2        case 16:
 388   2      
 389   2          pic_set(30);
 390   2          break;
 391   2        default:
 392   2          break;
 393   2        }
 394   1      }
 395          // œ‘ æµ˜π‚ƒ£øÈΩÁ√Ê
 396          void display_dim_scene_interface(module_t *p)
 397          {
 398   1        write_dgus(0x3f08, p->adr);
 399   1        write_dgus(0x3f09, p->channel_nb);
 400   1        write_dgusii_vp(0x3f00, (unsigned char *)&p->module_name, 8);
 401   1        write_dgusii_vp(0x3f0a, (unsigned char *)&p->channel_name, 8 * 16);
 402   1        // USER_PRINTF("display module index is %bd\n", p->index);
 403   1        switch (p->type)
 404   1        {
 405   2        case VOL_DIM_MODULE:
 406   2          pic_set(SCENE_DIM_PAGE);
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 8   

 407   2          break;
 408   2        case SCR_DIM_MODULE:
 409   2          pic_set(SCENE_SCR_PAGE);
 410   2          break;
 411   2        default:
 412   2          break;
 413   2        }
 414   1      }
 415          // œ‘ æ…Ë÷√ΩÁ√Ê
 416          void display_scene_interface(module_t *p)
 417          {
 418   1        if (0 == p->data_sta)
 419   1        {
 420   2          return;
 421   2        }
 422   1        switch (p->type)
 423   1        {
 424   2        case SINGLE_RELAY_MODULE:
 425   2        case SINGLE_TIME_RELAY_MODULE:
 426   2        case DOUBLE_RELAY_MODULE:
 427   2        case DOUBLE_TIME_RELAY_MODULE:
 428   2      
 429   2          display_relay_scene_interface(p);
 430   2          USER_PRINTF("display_relay_scene_interface\n");
 431   2          //        relay_read(p);
 432   2          break;
 433   2        case VOL_DIM_MODULE:
 434   2        case SCR_DIM_MODULE:
 435   2          //        clear_touch_sta();
 436   2          display_dim_scene_interface(p);
 437   2          USER_PRINTF("display_dim_scene_interface\n");
 438   2          //        dim_read(p);
 439   2          break;
 440   2          break;
 441   2        default:
 442   2      
 443   2          break;
 444   2        }
 445   1      }
 446          // —°‘Òƒ£øÈΩ¯––≥°æ∞…Ë÷√
 447          void module_scene_select(module_t *p, unsigned char key)
 448          {
 449   1        norflash_read((key - 1) * 140, (unsigned char *)p, 140);
 450   1        //  USER_PRINTF("module_scene.scene_name_index -->%bd\n",module_scene.scene_name_index);
 451   1        display_scene_interface(p);
 452   1      }
 453          // —°‘Òƒ£øÈΩ¯––≥°æ∞…Ë÷√
 454          void module_scene_select_ctrl(scenc_infor_t *p_scenc_infor)
 455          {
 456   1        unsigned short key_nb = 0;
 457   1        unsigned short size_cal = 0;
 458   1        // static unsigned char i = 0;
 459   1        // if (0 == i)
 460   1        // {
 461   1        //  i = 1;
 462   1        //  size_cal = SCENC_INFOR_T_SIZE; //
 463   1      
 464   1        //  USER_PRINTF("scenc_infor_t size is %d\n", size_cal);
 465   1        //  size_cal = NAME_SCENE_T_SIZE;
 466   1        //  USER_PRINTF("name_scene_t size is %d\n", size_cal);
 467   1        //  size_cal = SINGLE_TIMING_SCENC_INFOR_T_SIZE;
 468   1        //  USER_PRINTF("timing_scenc_infor_t size is %d\n", size_cal);
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 9   

 469   1        //  //    size_cal = SINGLE_TIMING_SCENC_INFOR_T_SIZE*2;
 470   1      
 471   1        //  USER_PRINTF("MODULE_FLASH_ADR_END is 0x%hx\n", MODULE_FLASH_ADR_END);
 472   1        //  USER_PRINTF("SCENE_NAME_FLASH_ADR_END is 0x%hx\n", SCENE_NAME_FLASH_ADR_END);
 473   1        //  USER_PRINTF("TIMING_SCENE_INFOR_FLASH_ADR_SATRT is 0x%hx\n", TIMING_SCENE_INFOR_FLASH_ADR_SATRT);
 474   1        // }
 475   1        get_key_value(0x101b, &key_nb);
 476   1        if ((key_nb) && (0 == GET_BIT(module_scene_select_key_bak[((key_nb - 1) / 8)], (key_nb - 1) % 8)) && (0x3
             -1 == p_scenc_infor->edit_sta))
 477   1        {
 478   2      
 479   2          // USER_PRINTF("module_%d_select_ctrl_add\n", key_nb);
 480   2          //    printf_tab(512,module_scene_select_key_bak);
 481   2          temp_module_index = key_nb;
 482   2          //    SET_BIT(module_scene_select_key_bak[(p_module_scene->scene_name_index-1)+((key_nb-1)/8)],(key_nb-1)%
             -8);
 483   2          //    clear_led_sta(led_sta);
 484   2          // USER_PRINTF("module_scene.scene_name_index -->%bd\n", module_scene.scene_name_index);
 485   2          module_scene_select(&st_module, key_nb);
 486   2      
 487   2          clear_key_value(0x101b, &key_nb);
 488   2          key_nb = 0;
 489   2        }
 490   1        else if ((key_nb) && (0 == GET_BIT(module_scene_select_key_bak[((key_nb - 1) / 8)], (key_nb - 1) % 8)) &&
             - (0x51 == p_scenc_infor->edit_sta))
 491   1        {
 492   2          // USER_PRINTF("module_scene.scene_name_index -->%bd\n", module_scene.scene_name_index);
 493   2          USER_PRINTF("module_scene_select_ctrl_modtify\n");
 494   2          //    printf_tab(512,module_scene_select_key_bak);
 495   2          temp_module_index = key_nb;
 496   2          //    SET_BIT(module_scene_select_key_bak[(p_module_scene->scene_name_index-1)+((key_nb-1)/8)],(key_nb-1)%
             -8);
 497   2          //    clear_led_sta(led_sta);
 498   2          module_scene_select(&st_module, key_nb);
 499   2          clear_key_value(0x101b, &key_nb);
 500   2          key_nb = 0;
 501   2        }
 502   1      }
 503          // …Ë÷√≥°æ∞ºÃµÁ∆˜ƒ£øÈ–≈œ¢
 504          void module_relay_scene_set(module_t *p, scenc_infor_t *p_scenc_infor, name_scene_t *p_module_scene, unsig
             -ned short index, unsigned char edit_sta)
 505          {
 506   1        //  unsigned short scene_led_enable = 0,scene_led_sta = 0;
 507   1        //  unsigned short led_hr_index_start = 0;
 508   1        unsigned char temp_tab[32] = {0};
 509   1        if ((SINGLE_RELAY_MODULE == p->type) || (SINGLE_TIME_RELAY_MODULE == p->type))
 510   1        {
 511   2          p_scenc_infor->led_hr_index_start = 337;
 512   2        }
 513   1        else if ((DOUBLE_RELAY_MODULE == p->type) || (DOUBLE_TIME_RELAY_MODULE == p->type))
 514   1        {
 515   2          p_scenc_infor->led_hr_index_start = 400;
 516   2        }
 517   1        else
 518   1        {
 519   2          return;
 520   2        }
 521   1        p_scenc_infor->scene_infor_index = p_module_scene->scene_name_index;
 522   1        p_scenc_infor->type = p->type;
 523   1        p_scenc_infor->adr = p->adr;
 524   1        p_scenc_infor->channel_nb = p->channel_nb;
 525   1        p_scenc_infor->module_index = p->index;
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 10  

 526   1        p_scenc_infor->data_sta = 1;
 527   1        p_scenc_infor->index = index + 1;
 528   1        p_scenc_infor->edit_sta = edit_sta & 0x0f;
 529   1        //  get_led_set_sta(&p_scenc_infor->led_enable,&p_scenc_infor->led_sta);
 530   1        switch (p_scenc_infor->channel_nb)
 531   1        {
 532   2        case 4:
 533   2          read_dgusii_vp(0x101c, (unsigned char *)temp_tab, 16);
 534   2          //  USER_PRINTF("function_module_relay_scene_send--->%x\n",scene_led_enable);
 535   2          p_scenc_infor->led_enable = temp_tab[1] | temp_tab[3] << 1 | temp_tab[5] << 2 | temp_tab[7] << 3;
 536   2          read_dgusii_vp(0x1040, (unsigned char *)temp_tab, 16);
 537   2          p_scenc_infor->led_sta = temp_tab[1] | temp_tab[3] << 1 | temp_tab[5] << 2 | temp_tab[7] << 3;
 538   2          break;
 539   2        case 6:
 540   2          read_dgusii_vp(0x101c, (unsigned char *)temp_tab, 16);
 541   2          //  USER_PRINTF("function_module_relay_scene_send--->%x\n",scene_led_enable);
 542   2          p_scenc_infor->led_enable = temp_tab[1] | temp_tab[3] << 1 | temp_tab[5] << 2 | temp_tab[7] << 3 | temp_
             -tab[9] << 4 | temp_tab[11] << 5;
 543   2          read_dgusii_vp(0x1040, (unsigned char *)temp_tab, 16);
 544   2          p_scenc_infor->led_sta = temp_tab[1] | temp_tab[3] << 1 | temp_tab[5] << 2 | temp_tab[7] << 3 | temp_tab
             -[9] << 4 | temp_tab[11] << 5;
 545   2          break;
 546   2        case 8:
 547   2          read_dgusii_vp(0x101c, (unsigned char *)temp_tab, 16);
 548   2          //  USER_PRINTF("function_module_relay_scene_send--->%x\n",scene_led_enable);
 549   2          p_scenc_infor->led_enable = temp_tab[1] | temp_tab[3] << 1 | temp_tab[5] << 2 | temp_tab[7] << 3 | temp_
             -tab[9] << 4 | temp_tab[11] << 5 | temp_tab[13] << 6 | temp_tab[15] << 7;
 550   2          read_dgusii_vp(0x1040, (unsigned char *)temp_tab, 16);
 551   2          p_scenc_infor->led_sta = temp_tab[1] | temp_tab[3] << 1 | temp_tab[5] << 2 | temp_tab[7] << 3 | temp_tab
             -[9] << 4 | temp_tab[11] << 5 | temp_tab[13] << 6 | temp_tab[15] << 7;
 552   2          break;
 553   2        case 10:
 554   2          read_dgusii_vp(0x101c, (unsigned char *)temp_tab, 16);
 555   2          //  USER_PRINTF("function_module_relay_scene_send--->%x\n",scene_led_enable);
 556   2          p_scenc_infor->led_enable = temp_tab[1] | temp_tab[3] << 1 | temp_tab[5] << 2 | temp_tab[7] << 3 | temp_
             -tab[9] << 4 | temp_tab[11] << 5 | temp_tab[13] << 6 | temp_tab[15] << 7 |
 557   2                                      temp_tab[17] << 8 | temp_tab[19] << 9;
 558   2          read_dgusii_vp(0x1040, (unsigned char *)temp_tab, 16);
 559   2          p_scenc_infor->led_sta = temp_tab[1] | temp_tab[3] << 1 | temp_tab[5] << 2 | temp_tab[7] << 3 | temp_tab
             -[9] << 4 | temp_tab[11] << 5 | temp_tab[13] << 6 | temp_tab[15] << 7 |
 560   2                                   temp_tab[17] << 8 | temp_tab[19] << 9;
 561   2          break;
 562   2        case 12:
 563   2          read_dgusii_vp(0x101c, (unsigned char *)temp_tab, 16);
 564   2          //  USER_PRINTF("function_module_relay_scene_send--->%x\n",scene_led_enable);
 565   2          p_scenc_infor->led_enable = temp_tab[1] | temp_tab[3] << 1 | temp_tab[5] << 2 | temp_tab[7] << 3 | temp_
             -tab[9] << 4 | temp_tab[11] << 5 | temp_tab[13] << 6 | temp_tab[15] << 7 |
 566   2                                      temp_tab[17] << 8 | temp_tab[19] << 9 | temp_tab[21] << 10 | temp_tab[23] << 11;
 567   2          read_dgusii_vp(0x1040, (unsigned char *)temp_tab, 16);
 568   2          p_scenc_infor->led_sta = temp_tab[1] | temp_tab[3] << 1 | temp_tab[5] << 2 | temp_tab[7] << 3 | temp_tab
             -[9] << 4 | temp_tab[11] << 5 | temp_tab[13] << 6 | temp_tab[15] << 7 |
 569   2                                   temp_tab[17] << 8 | temp_tab[19] << 9 | temp_tab[21] << 10 | temp_tab[23] << 11;
 570   2          break;
 571   2        case 14:
 572   2          read_dgusii_vp(0x101c, (unsigned char *)temp_tab, 16);
 573   2          //  USER_PRINTF("function_module_relay_scene_send--->%x\n",scene_led_enable);
 574   2          p_scenc_infor->led_enable = temp_tab[1] | temp_tab[3] << 1 | temp_tab[5] << 2 | temp_tab[7] << 3 | temp_
             -tab[9] << 4 | temp_tab[11] << 5 | temp_tab[13] << 6 | temp_tab[15] << 7 |
 575   2                                      temp_tab[17] << 8 | temp_tab[19] << 9 | temp_tab[21] << 10 | temp_tab[23] << 11 | temp_tab
             -[25] << 12 | temp_tab[27] << 13;
 576   2          read_dgusii_vp(0x1040, (unsigned char *)temp_tab, 16);
 577   2          p_scenc_infor->led_sta = temp_tab[1] | temp_tab[3] << 1 | temp_tab[5] << 2 | temp_tab[7] << 3 | temp_tab
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 11  

             -[9] << 4 | temp_tab[11] << 5 | temp_tab[13] << 6 | temp_tab[15] << 7 |
 578   2                                   temp_tab[17] << 8 | temp_tab[19] << 9 | temp_tab[21] << 10 | temp_tab[23] << 11 | temp_tab[
             -25] << 12 | temp_tab[27] << 13;
 579   2        case 16:
 580   2          read_dgusii_vp(0x101c, (unsigned char *)temp_tab, 16);
 581   2          //  USER_PRINTF("function_module_relay_scene_send--->%x\n",scene_led_enable);
 582   2          p_scenc_infor->led_enable = temp_tab[1] | temp_tab[3] << 1 | temp_tab[5] << 2 | temp_tab[7] << 3 | temp_
             -tab[9] << 4 | temp_tab[11] << 5 | temp_tab[13] << 6 | temp_tab[15] << 7 |
 583   2                                      temp_tab[17] << 8 | temp_tab[19] << 9 | temp_tab[21] << 10 | temp_tab[23] << 11 | temp_tab
             -[25] << 12 | temp_tab[27] << 13 | temp_tab[29] << 14 | temp_tab[31] << 15;
 584   2          read_dgusii_vp(0x1040, (unsigned char *)temp_tab, 16);
 585   2          p_scenc_infor->led_sta = temp_tab[1] | temp_tab[3] << 1 | temp_tab[5] << 2 | temp_tab[7] << 3 | temp_tab
             -[9] << 4 | temp_tab[11] << 5 | temp_tab[13] << 6 | temp_tab[15] << 7 |
 586   2                                   temp_tab[17] << 8 | temp_tab[19] << 9 | temp_tab[21] << 10 | temp_tab[23] << 11 | temp_tab[
             -25] << 12 | temp_tab[27] << 13 | temp_tab[29] << 14 | temp_tab[31] << 15;
 587   2          break;
 588   2        }
 589   1      
 590   1        USER_PRINTF("-->module_relay_scene_set\n");
 591   1      }
 592          
 593          // …Ë÷√≥°æ∞µ˜π‚ƒ£øÈ–≈œ¢
 594          void module_dim_scene_set(module_t *p, scenc_infor_t *p_scenc_infor, name_scene_t *p_module_scene, unsigne
             -d short index, unsigned char edit_sta)
 595          {
 596   1        unsigned short scene_dim_enable = 0;
 597   1        unsigned short scene_dim_enable_adr = 0, scene_dim_gear_adr = 0;
 598   1        unsigned char temp_tab[8] = {0}, dim_tab[4] = {0};
 599   1        if ((VOL_DIM_MODULE == p->type))
 600   1        {
 601   2          scene_dim_enable_adr = 0x1050;
 602   2          scene_dim_gear_adr = 0x1054;
 603   2        }
 604   1        else if ((SCR_DIM_MODULE == p->type))
 605   1        {
 606   2          scene_dim_enable_adr = 0x1058;
 607   2          scene_dim_gear_adr = 0x105c;
 608   2        }
 609   1        else
 610   1        {
 611   2          return;
 612   2        }
 613   1        p_scenc_infor->type = p->type;
 614   1        p_scenc_infor->adr = p->adr;
 615   1        p_scenc_infor->channel_nb = p->channel_nb;
 616   1        p_scenc_infor->module_index = p->index;
 617   1        p_scenc_infor->data_sta = 1;
 618   1        p_scenc_infor->index = index + 1;
 619   1        p_scenc_infor->edit_sta = edit_sta & 0x0f;
 620   1        read_dgusii_vp(scene_dim_enable_adr, (unsigned char *)temp_tab, 4);
 621   1        p_scenc_infor->diming_enable = scene_dim_enable = temp_tab[1] | temp_tab[3] << 1 | temp_tab[5] << 2 | tem
             -p_tab[7] << 3;
 622   1        // USER_PRINTF("scene_dim_enable value--->%x\n", scene_dim_enable);
 623   1        read_dgusii_vp(scene_dim_gear_adr, (unsigned char *)temp_tab, 4);
 624   1        p_scenc_infor->dimming_duty[0] = dim_tab[0] = temp_tab[1];
 625   1        p_scenc_infor->dimming_duty[1] = dim_tab[1] = temp_tab[3];
 626   1        p_scenc_infor->dimming_duty[2] = dim_tab[2] = temp_tab[5];
 627   1        p_scenc_infor->dimming_duty[3] = dim_tab[3] = temp_tab[7];
 628   1        p_scenc_infor->scene_infor_index = p_module_scene->scene_name_index;
 629   1        printf_tab(4, dim_tab);
 630   1      }
 631          // ºÃµÁ∆˜ƒ£øÈ≥°æ∞…Ë∂®–≈œ¢modbus∑¢ÀÕ ˝æ›
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 12  

 632          void module_relay_scene_send(scenc_infor_t *p_scenc_infor)
 633          {
 634   1        if ((SINGLE_RELAY_MODULE == p_scenc_infor->type) || (SINGLE_TIME_RELAY_MODULE == p_scenc_infor->type) || 
             -(DOUBLE_RELAY_MODULE == p_scenc_infor->type) || (DOUBLE_TIME_RELAY_MODULE == p_scenc_infor->type))
 635   1        {
 636   2          set_master_send_hr(master_send_hr, p_scenc_infor->led_hr_index_start, p_scenc_infor->scene_infor_index <
             -< 8 | p_scenc_infor->edit_sta);
 637   2          // USER_PRINTF("scene_led_enable value--->%x\n", p_scenc_infor->led_enable);
 638   2          set_master_send_hr(master_send_hr, p_scenc_infor->led_hr_index_start + 1, p_scenc_infor->led_enable);
 639   2          set_master_send_hr(master_send_hr, p_scenc_infor->led_hr_index_start + 2, p_scenc_infor->led_sta);
 640   2          // USER_PRINTF("scene_led_sta value--->%x\n", p_scenc_infor->led_sta);
 641   2          set_master_send_hr(master_send_hr, p_scenc_infor->led_hr_index_start + 3, ENTERPRISE);
 642   2          pack_data_send(&user_modbus, p_scenc_infor->adr, MD_FR_MHR, p_scenc_infor->led_hr_index_start, 4);
 643   2        }
 644   1        else
 645   1        {
 646   2          return;
 647   2        }
 648   1      }
 649          // µ˜π‚ƒ£øÈ≥°æ∞…Ë∂®–≈œ¢modbus∑¢ÀÕ ˝æ›
 650          void module_dim_scene_send(scenc_infor_t *p_scenc_infor)
 651          {
 652   1        if ((VOL_DIM_MODULE == p_scenc_infor->type) || (SCR_DIM_MODULE == p_scenc_infor->type))
 653   1        {
 654   2          set_master_send_hr(master_send_hr, 50, p_scenc_infor->scene_infor_index << 8 | p_scenc_infor->edit_sta);
 655   2          set_master_send_hr(master_send_hr, 51, p_scenc_infor->diming_enable);
 656   2          set_master_send_hr(master_send_hr, 52, p_scenc_infor->dimming_duty[0]);
 657   2          set_master_send_hr(master_send_hr, 53, p_scenc_infor->dimming_duty[1]);
 658   2          set_master_send_hr(master_send_hr, 54, p_scenc_infor->dimming_duty[2]);
 659   2          set_master_send_hr(master_send_hr, 55, p_scenc_infor->dimming_duty[3]);
 660   2          set_master_send_hr(master_send_hr, 56, ENTERPRISE);
 661   2          pack_data_send(&user_modbus, p_scenc_infor->adr, MD_FR_MHR, 50, 7);
 662   2        }
 663   1        else
 664   1        {
 665   2          return;
 666   2        }
 667   1      }
 668          void scene_delete_ctrl_send(name_scene_t *p)
 669          {
 670   1        //  static unsigned char send_cnt
 671   1        //  unsigned char index = 0;
 672   1        if (2 == p->edit_sta) // …æ≥˝
 673   1        {
 674   2      
 675   2          if (0 == p->scene_name_index)
 676   2          {
 677   3            USER_PRINTF("-->no scene need to delete \n");
 678   3            //      mbHost.scene_send_cyc_time = 0;
 679   3            scene_data.delete_scenc_send_cyc_flag = 0;
 680   3            pop_menu_key_ctrl(0xf0); // πÿ±’≤Ÿ◊˜µØ¥∞
 681   3            p->edit_sta = 0;
 682   3            return;
 683   3          }
 684   2          scene_data.delete_scenc_send_cyc_flag = 1;
 685   2        }
 686   1        if (1 == scene_data.delete_scenc_send_cyc_flag)
 687   1        {
 688   2          if ((0 == scene_data.delete_scenc_send_cyc_time) && (mbh_getState() == MBH_STATE_IDLE))
 689   2          {
 690   3            scene_data.delete_scenc_send_cyc_time = 100;
 691   3            if (FULL == ((temp_scenc_infor + scene_data.delete_scenc_send_cnt)->data_sta))
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 13  

 692   3            {
 693   4              if (1 == infor_clear_sta)
 694   4                (temp_scenc_infor + scene_data.delete_scenc_send_cnt)->edit_sta = 2;
 695   4              module_relay_scene_send(temp_scenc_infor + scene_data.delete_scenc_send_cnt);
 696   4              module_dim_scene_send(temp_scenc_infor + scene_data.delete_scenc_send_cnt);
 697   4              scene_data.delete_scenc_send_cnt++;
 698   4            }
 699   3            else
 700   3            {
 701   4              scene_data.delete_scenc_send_cnt++;
 702   4            }
 703   3          }
 704   2        }
 705   1        if (scene_data.delete_scenc_send_cnt > SCENE_NUB_SIGNLE)
 706   1        {
 707   2          scene_data.delete_scenc_send_cnt = 0;
 708   2          scene_data.delete_scenc_send_cyc_time = 0;
 709   2          scene_data.delete_scenc_send_cyc_flag = 0;
 710   2          p->edit_sta = 0;
 711   2          infor_clear_sta = 0;
 712   2          // USER_PRINTF("-->%bd scene name delete ok!\n", p->scene_name_index);
 713   2          clear_temp_scenc_infor();
 714   2        }
 715   1      }
 716          // ≥°æ∞√˚◊÷¡–±Ì≤Ÿ◊˜modbus∑¢ÀÕ ˝æ›
 717          void scene_name_ctrl_send(name_scene_t *p)
 718          {
 719   1        static unsigned char i = 0;
 720   1        unsigned char j = 0;
 721   1        unsigned char index = 0;
 722   1        scenc_infor_t scenc_infor[4] = {
 723   1            {0, 0, 0, SINGLE_RELAY_MODULE, 0, 0, 0, 0, 0, 0, 337, 0, 0},
 724   1            {0, 0, 0, DOUBLE_RELAY_MODULE, 0, 0, 0, 0, 0, 0, 400, 0, 0},
 725   1            {0, 0, 0, VOL_DIM_MODULE, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 726   1            {0, 0, 0, SCR_DIM_MODULE, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 727   1        };
 728   1        //  USER_PRINTF("module_scene.edit_sta is %bd\n",p->edit_sta);
 729   1        //  index = get_scene_name_select_sequence_number();
 730   1        //  if(index)
 731   1        //  {
 732   1        //    USER_PRINTF("-->index is %bd\n",index);
 733   1        //  }
 734   1        if ((1 == p->edit_sta) || (0 == p->edit_sta))
 735   1        {
 736   2          //    mbHost.scene_send_cyc_time = 0;
 737   2          scene_data.scenc_send_name_cyc_flag = 0;
 738   2          return;
 739   2        }
 740   1        else if (3 == p->edit_sta) // «Âø’
 741   1        {
 742   2          if (0xff == if_all_scene_name_blank())
 743   2          {
 744   3            scene_data.scenc_send_name_cyc_flag = 0;
 745   3            pop_menu_key_ctrl(0xf0); // πÿ±’≤Ÿ◊˜µØ¥∞
 746   3            p->edit_sta = 0;
 747   3            return;
 748   3          }
 749   2          scenc_infor[0].edit_sta = 3;
 750   2          scenc_infor[1].edit_sta = 3;
 751   2          scenc_infor[2].edit_sta = 3;
 752   2          scenc_infor[3].edit_sta = 3;
 753   2        }
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 14  

 754   1        //  else if(2 == p->edit_sta)//…æ≥˝
 755   1        //  {
 756   1      
 757   1        //    if(0 == p->scene_name_index)
 758   1        //    {
 759   1        //      USER_PRINTF("-->delete index is zero\n");
 760   1        ////      mbHost.scene_send_cyc_time = 0;
 761   1        //      scene_data.scenc_send_name_cyc_flag = 0;
 762   1        //      pop_menu_key_ctrl(0xf0);//πÿ±’≤Ÿ◊˜µØ¥∞
 763   1        //      p->edit_sta = 0;
 764   1        //      return;
 765   1        //    }
 766   1      
 767   1        //    for(j = 0;j<4;j++)
 768   1        //    {
 769   1        //      scenc_infor[j].edit_sta = 2;
 770   1        //      scenc_infor[j].scene_infor_index = p->scene_name_index;
 771   1        //    }
 772   1        ////    USER_PRINTF("-->enter_delete_state\n");
 773   1        //  }
 774   1      
 775   1        if ((1 == scene_data.scenc_send_name_cyc_flag) && (0 == mbHost.scene_send_cyc_time))
 776   1        {
 777   2          mbHost.scene_send_cyc_time = MBH_CYC_TIME;
 778   2          module_relay_scene_send(scenc_infor + i);
 779   2          module_dim_scene_send(scenc_infor + i);
 780   2          USER_PRINTF("-->scene_name_ctrl_send\n");
 781   2          i++;
 782   2        }
 783   1        if (i > 2)
 784   1        {
 785   2          // USER_PRINTF("module_scene.edit_sta is %bd\n", p->edit_sta);
 786   2          //    write_dgus(0x107f,0xff);
 787   2          i = 0;
 788   2          scene_data.scenc_send_name_cyc_flag = 0;
 789   2          //    mbHost.scene_send_cyc_time = 0;
 790   2          //    pic_set(1);
 791   2      
 792   2          p->edit_sta = 0;
 793   2          //    p->scene_name_index = 0;
 794   2          USER_PRINTF("-->scene_name_ctrl_send_over\n");
 795   2          //    T5L_Flash(0x5A,0X4100, SCENE_NAME_FLASH_ADR_SATRT,SCENE_NAME_NUB*NAME_SCENE_T_SIZE); //∂¡Œ™0≥°æ∞√˚≥∆
             -–≈œ¢
 796   2          //    USER_PRINTF("-->scene_display_name_clear_ok\n");
 797   2          pop_menu_key_ctrl(0xf0); // πÿ±’≤Ÿ◊˜µØ¥∞
 798   2        }
 799   1      }
 800          // ≥°æ∞–≈œ¢∑¢ÀÕÀ˘”–ƒ£øÈ
 801          void module_scene_send(void)
 802          {
 803   1        static unsigned char i = 0;
 804   1        if ((1 == scene_data.scenc_send_infor_cyc_flag) && (0 == mbHost.scene_send_cyc_time))
 805   1        {
 806   2          //    USER_PRINTF("-->module_scene_send_cyc\n");
 807   2          //        USER_PRINTF("-->i value is %bd\n",i);
 808   2          if ((FULL == temp_scenc_infor[i].data_sta) && (0 != temp_scenc_infor[i].edit_sta))
 809   2          {
 810   3            mbHost.scene_send_cyc_time = MBH_CYC_TIME;
 811   3            module_relay_scene_send(temp_scenc_infor + i);
 812   3            module_dim_scene_send(temp_scenc_infor + i);
 813   3            USER_PRINTF("-->module_scene_send\n");
 814   3            i++;
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 15  

 815   3          }
 816   2          else if (BLANK == temp_scenc_infor[i++].data_sta)
 817   2          {
 818   3            //      USER_PRINTF("-->BLANK == temp_scenc_infor[i].data_sta\n");
 819   3            //      mbHost.scene_send_cyc_time = 200;
 820   3            ;
 821   3          }
 822   2        }
 823   1        if (i > 63)
 824   1        {
 825   2          //    CLEAR_BIT(module_scene_select_key_bak[(module_scene.scene_name_index-1)*((temp_module_index-1)/8)],(
             -temp_module_index-1)%8);
 826   2          memset((unsigned char *)module_scene_select_key_bak, 0, 8);
 827   2          temp_module_index = 0;
 828   2          i = 0;
 829   2          mbHost.scene_send_cyc_time = 0;
 830   2          scene_data.scenc_send_infor_cyc_flag = 0;
 831   2          clear_temp_scenc_infor(); // «Âø’≥°æ∞–≈œ¢¡Ÿ ±±‰¡ø
 832   2          clear_all_scene_infor();  // «Âø’≥°æ∞–≈œ¢œ‘ æ
 833   2          pic_set(22);
 834   2        }
 835   1      }
 836          // œ‘ ææﬂÃÂ≥°æ∞÷¥–––≈œ¢
 837          void display_scene_infor(scenc_infor_t *p_scenc_infor)
 838          {
 839   1        unsigned char mod_infom_tab[141] = {0};
 840   1        unsigned char module_name_1[17] = {0};
 841   1        unsigned char led_on_tb[49] = {0};
 842   1        unsigned char led_off_tb[49] = {0};
 843   1        unsigned short on_sta = 0, off_sta = 0;
 844   1        unsigned char i = 0, j = 0, k = 0, l = 0;
 845   1        unsigned char dim_duty_tb[40] = {0};
 846   1        unsigned char dim_duty_str[10] = {0};
 847   1        unsigned char str_len_cal = 0;
 848   1        unsigned char str_adr = 0;
 849   1        char channel[48] = "01,02,03,04,05,06,07,08,09,10,11,12,13,14,15,16,";
 850   1        module_t module_read = {0};
 851   1        if ((p_scenc_infor->type < 2) || (4 == p_scenc_infor->type) || (5 == p_scenc_infor->type))
 852   1        {
 853   2          on_sta = p_scenc_infor->led_enable & (p_scenc_infor->led_sta);
 854   2          // USER_PRINTF("on_sta is 0x%x\n", on_sta);
 855   2          off_sta = p_scenc_infor->led_enable & (~p_scenc_infor->led_sta);
 856   2          // USER_PRINTF("off_sta is 0x%x\n", off_sta);
 857   2          for (i = 0; i < 16; i++)
 858   2          {
 859   3            if (GET_BIT(on_sta, i))
 860   3            {
 861   4              strncpy(led_on_tb + j * 3, &channel[i * 3], 3);
 862   4              j++;
 863   4            }
 864   3          }
 865   2          for (i = 0; i < 16; i++)
 866   2          {
 867   3            if (GET_BIT(off_sta, i))
 868   3            {
 869   4              strncpy(led_off_tb + k * 3, &channel[i * 3], 3);
 870   4              k++;
 871   4            }
 872   3          }
 873   2          // USER_PRINTF("led_on_tb is %s\n", led_on_tb);
 874   2          // USER_PRINTF("led_off_tb is %s\n", led_off_tb);
 875   2          //    strncpy(module_name_1,&module_name_tab[p_scenc_infor->type],8);
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 16  

 876   2        }
 877   1        else
 878   1        {
 879   2          for (i = 0; i < 4; i++)
 880   2          {
 881   3            if (GET_BIT(p_scenc_infor->diming_enable, i))
 882   3            {
 883   4      
 884   4              sprintf(dim_duty_str, "%d%%;", p_scenc_infor->type == 2 ? p_scenc_infor->dimming_duty[i] * 10 : p_scen
             -c_infor->dimming_duty[i]);
 885   4      
 886   4              str_len_cal = strlen(dim_duty_str);
 887   4              // USER_PRINTF("dim_duty_str str_len_cal is %bd\n", str_len_cal);
 888   4              strncpy(dim_duty_tb + str_adr, &channel[i * 3], 3);
 889   4              str_adr += 3;
 890   4              // USER_PRINTF("dim_duty_str is %s\n", dim_duty_str);
 891   4              strncpy(dim_duty_tb + str_adr, &dim_duty_str, str_len_cal);
 892   4              str_adr += str_len_cal;
 893   4              l++;
 894   4            }
 895   3          }
 896   2          // USER_PRINTF("dim_duty_infor is %s\n", dim_duty_tb);
 897   2          //    strncpy(module_name_1,&module_name_tab[p_scenc_infor->type],10);
 898   2        }
 899   1      
 900   1        // USER_PRINTF("-->display_scene_infor p_scenc_infor->module_index is %bd\n", p_scenc_infor->module_index
             -);
 901   1        norflash_read((p_scenc_infor->module_index) * 140, (unsigned char *)&module_read, 140);
 902   1      
 903   1        strncpy(module_name_1, &module_read.module_name[0], 16);
 904   1        strrpl(module_name_1, " ", "");
 905   1      
 906   1        // if((on_sta)&&(off_sta))
 907   1        //  sprintf(mod_infom_tab,"%s;µÿ÷∑:%bd;%bd¬∑;%sø™;%sπÿ",module_name_1,p_scenc_infor->adr,p_scenc_infor->c
             -hannel_nb,led_on_tb,led_off_tb);
 908   1        // else if((on_sta)&&( 0 == off_sta))
 909   1        //  sprintf(mod_infom_tab,"%s;µÿ÷∑:%bd;%bd¬∑;%sø™",module_name_1,p_scenc_infor->adr,p_scenc_infor->channe
             -l_nb,led_on_tb);
 910   1        // else if(( 0 == on_sta)&&(off_sta))
 911   1        //  sprintf(mod_infom_tab,"%s;µÿ÷∑:%bd;%bd¬∑;%sπÿ",module_name_1,p_scenc_infor->adr,p_scenc_infor->channe
             -l_nb,led_off_tb);
 912   1        // else if(p_scenc_infor->diming_enable)
 913   1        //  sprintf(mod_infom_tab,"%s;µÿ÷∑:%bd;%bd¬∑;%s",module_name_1,p_scenc_infor->adr,p_scenc_infor->channel_
             -nb,dim_duty_tb);
 914   1        // else
 915   1        //  sprintf(mod_infom_tab,"%s;µÿ÷∑:%bd;%bd¬∑;Œ¥≈‰÷√≥°æ∞",module_name_1,p_scenc_infor->adr,p_scenc_infor->
             -channel_nb);
 916   1        if ((on_sta) && (off_sta))
 917   1          sprintf(mod_infom_tab, "µÿ÷∑:%bd;%bd¬∑;%sø™;%sπÿ;ƒ£øÈ:%s", p_scenc_infor->adr, p_scenc_infor->channel_nb
             -, led_on_tb, led_off_tb, module_name_1);
 918   1        else if ((on_sta) && (0 == off_sta))
 919   1          sprintf(mod_infom_tab, "µÿ÷∑:%bd;%bd¬∑;%sø™;ƒ£øÈ:%s", p_scenc_infor->adr, p_scenc_infor->channel_nb, led
             -_on_tb, module_name_1);
 920   1        else if ((0 == on_sta) && (off_sta))
 921   1          sprintf(mod_infom_tab, "µÿ÷∑:%bd;%bd¬∑;%sπÿ;ƒ£øÈ:%s", p_scenc_infor->adr, p_scenc_infor->channel_nb, led
             -_off_tb, module_name_1);
 922   1        else if (p_scenc_infor->diming_enable)
 923   1          sprintf(mod_infom_tab, "µÿ÷∑:%bd;%bd¬∑;%s;ƒ£øÈ:%s", p_scenc_infor->adr, p_scenc_infor->channel_nb, dim_d
             -uty_tb, module_name_1);
 924   1        else
 925   1          sprintf(mod_infom_tab, "µÿ÷∑:%bd;%bd¬∑;Œ¥≈‰÷√≥°æ∞;%s", p_scenc_infor->adr, p_scenc_infor->channel_nb, mo
             -dule_name_1);
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 17  

 926   1      
 927   1        // USER_PRINTF("-->module_message %s\n", mod_infom_tab);
 928   1        //  USER_PRINTF("-->module->index %bd\n",p_scenc_infor->index);
 929   1        write_dgusii_vp(0x5000 + (p_scenc_infor->index - 1) * 70, (unsigned char *)mod_infom_tab, 43);
 930   1        // USER_PRINTF("-->display_scene_infor_scenc_infor_index %d\n", p_scenc_infor->index);
 931   1      }
 932          // ≥°æ∞¡–±ÌÃÌº”ƒ£øÈ–≈œ¢
 933          void add_module_scene_infor(module_t *p, scenc_infor_t *p_scenc_infor, name_scene_t *p_module_scene)
 934          {
 935   1        unsigned short key_nb = 0;
 936   1        unsigned char i = 0;
 937   1        unsigned short j = 0;
 938   1        //  unsigned char temp_index = 0;
 939   1        get_key_value(0x102e, &key_nb);
 940   1        if ((1 == key_nb) && (0x31 == p_scenc_infor->edit_sta)) // »∑»œ‘ˆº”
 941   1        {
 942   2          // USER_PRINTF("p_scenc_infor->edit_sta -->%bx\n", p_scenc_infor->edit_sta);
 943   2          //    p_scenc_infor->edit_sta = 1;
 944   2          p_scenc_infor->scene_infor_index = p_module_scene->scene_name_index;
 945   2          //    USER_PRINTF("p_module_scene->scene_name_index -->%bd\n",p_module_scene->scene_name_index);
 946   2          // USER_PRINTF("p_scenc_infor->scene_infor_index -->%bd\n", p_scenc_infor->scene_infor_index);
 947   2          p_scenc_infor->index = get_blank_scene_infor_index();
 948   2          // USER_PRINTF("get_scene_infor_blank_index -->%d\n", p_scenc_infor->index);
 949   2          module_relay_scene_set(p, temp_scenc_infor + p_scenc_infor->index, p_module_scene, p_scenc_infor->index,
             - p_scenc_infor->edit_sta);
 950   2          module_dim_scene_set(p, temp_scenc_infor + p_scenc_infor->index, p_module_scene, p_scenc_infor->index, p
             -_scenc_infor->edit_sta);
 951   2          display_scene_infor(temp_scenc_infor + p_scenc_infor->index);
 952   2          clear_key_value(0x102e, &key_nb);
 953   2          //  unsigned short index;
 954   2          //  unsigned char  type;
 955   2          //  unsigned char  adr;
 956   2          //  unsigned char  channel_nb;
 957   2          //  unsigned char  edit_sta;
 958   2          // USER_PRINTF("module_t_index -->%bd\n", p->index);
 959   2          // printf_temp_scenc_infor(10);
 960   2          //    SET_BIT(module_scene_select_key_bak[(p_module_scene->scene_name_index-1)+((p->index)/8)],(p->index)%
             -8);
 961   2          //    SET_BIT(p_module_scene->module_select[(p_module_scene->scene_name_index-1)+((p->index)/8)],(p->index
             -)%8);
 962   2          SET_BIT(module_scene_select_key_bak[(p->index) / 8], (p->index) % 8);
 963   2          SET_BIT(p_module_scene->module_select[(p->index) / 8], (p->index) % 8);
 964   2          write_dgus(0X1200 + p->index, 1);
 965   2          //    j = (p_module_scene->scene_name_index-1)*8+((p->index)/8);
 966   2          j = ((p->index) / 8);
 967   2          if (p_scenc_infor->index >= 5)
 968   2          {
 969   3            scene_infor_page = SINGLE_SCENE_INFOR_LIST_SECOND_PAGE + p_scenc_infor->index / 5 - 1;
 970   3            pic_set(scene_infor_page);
 971   3            
 972   3          }
 973   2          else
 974   2          {
 975   3            scene_infor_page = SINGLE_SCENE_INFOR_LIST_FIRST_PAGE;
 976   3            pic_set(scene_infor_page);
 977   3          } 
 978   2          // USER_PRINTF("module_scene_select_key_bak[%d] is %bd\n", j, module_scene_select_key_bak[j]);
 979   2          //    printf_tab(512,module_scene_select_key_bak);
 980   2        }
 981   1        else if ((2 == key_nb) && (0x31 == p_scenc_infor->edit_sta)) // »°œ˚‘ˆº”
 982   1        {
 983   2          // USER_PRINTF("p_scenc_infor->edit_sta -->%bx\n", p_scenc_infor->edit_sta);
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 18  

 984   2          //    CLEAR_BIT(module_scene_select_key_bak[(p_module_scene->scene_name_index-1)+((p->index)/8)],(p->index
             -)%8);
 985   2          //    CLEAR_BIT(p_module_scene->module_select[(p_module_scene->scene_name_index-1)+((p->index)/8)],(p->ind
             -ex)%8);
 986   2          //    CLEAR_BIT(module_scene_select_key_bak[((p->index)/8)],(p->index)%8);
 987   2          //    CLEAR_BIT(p_module_scene->module_select[((p->index)/8)],(p->index)%8);
 988   2          //    write_dgus(0X1200+p->index,0);
 989   2          clear_key_value(0x102e, &key_nb);
 990   2          temp_module_index = 0;
 991   2          pic_set(scene_infor_page);
 992   2          //    printf_tab(512,module_scene_select_key_bak);
 993   2        }
 994   1        else if ((1 == key_nb) && (0x51 == p_scenc_infor->edit_sta)) // »∑»œ–ﬁ∏ƒ
 995   1        {
 996   2          // USER_PRINTF("p_scenc_infor->edit_sta -->%bx\n", p_scenc_infor->edit_sta);
 997   2          // USER_PRINTF("-->current infor index is %d\n", p_scenc_infor->index);
 998   2          // USER_PRINTF("module_t_index -->%bd\n", p->index);
 999   2          //    SET_BIT(module_scene_select_key_bak[(p_module_scene->scene_name_index-1)+((p->index)/8)],(p->index)%
             -8);
1000   2          //    SET_BIT(p_module_scene->module_select[(p_module_scene->scene_name_index-1)+((p->index)/8)],(p->index
             -)%8);
1001   2          SET_BIT(module_scene_select_key_bak[(p->index) / 8], (p->index) % 8);
1002   2          SET_BIT(p_module_scene->module_select[(p->index) / 8], (p->index) % 8);
1003   2          write_dgus(0X1200 + p->index, 1);
1004   2      
1005   2          module_relay_scene_set(p, temp_scenc_infor + p_scenc_infor->index, p_module_scene, p_scenc_infor->index,
             - p_scenc_infor->edit_sta);
1006   2          module_dim_scene_set(p, temp_scenc_infor + p_scenc_infor->index, p_module_scene, p_scenc_infor->index, p
             -_scenc_infor->edit_sta);
1007   2          display_scene_infor(temp_scenc_infor + p_scenc_infor->index);
1008   2          clear_key_value(0x102e, &key_nb);
1009   2          //    j = (p_module_scene->scene_name_index-1)*8+((p->index)/8);
1010   2          j = ((p->index) / 8);
1011   2          if (p_scenc_infor->index >= 5)
1012   2          {
1013   3            scene_infor_page = SINGLE_SCENE_INFOR_LIST_SECOND_PAGE + p_scenc_infor->index / 5 - 1;
1014   3            pic_set(scene_infor_page);
1015   3            
1016   3          }
1017   2          else
1018   2          {
1019   3            scene_infor_page = SINGLE_SCENE_INFOR_LIST_FIRST_PAGE;
1020   3            pic_set(scene_infor_page);
1021   3          } 
1022   2          // USER_PRINTF("module_scene_select_key_bak[%d] is %bd\n", j, module_scene_select_key_bak[j]);
1023   2          //    printf_tab(512,module_scene_select_key_bak);
1024   2        }
1025   1        else if ((2 == key_nb) && (0x51 == p_scenc_infor->edit_sta)) // »°œ˚–ﬁ∏ƒ
1026   1        {
1027   2          // USER_PRINTF("p_scenc_infor->edit_sta -->%bx\n", p_scenc_infor->edit_sta);
1028   2          //    CLEAR_BIT(module_scene_select_key_bak[(p_module_scene->scene_name_index-1)+((p->index)/8)],(p->index
             -)%8);
1029   2          //    CLEAR_BIT(p_module_scene->module_select[(p_module_scene->scene_name_index-1)+((p->index)/8)],(p->ind
             -ex)%8);
1030   2          //    CLEAR_BIT(module_scene_select_key_bak[((p->index)/8)],(p->index)%8);
1031   2          //    CLEAR_BIT(p_module_scene->module_select[((p->index)/8)],(p->index)%8);
1032   2          //    if(temp_module_index_bak!=p->index)
1033   2          //    {
1034   2          ////      write_dgus(0X1200+p->index,0);
1035   2          //      CLEAR_BIT(module_scene_select_key_bak[((temp_module_index_bak)/8)],(temp_module_index_bak)%8);
1036   2          //      CLEAR_BIT(p_module_scene->module_select[((temp_module_index_bak)/8)],(temp_module_index_bak)%8);
1037   2          //      write_dgus(0X1200+temp_module_index_bak,0);
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 19  

1038   2          //      temp_module_index_bak = p->index;
1039   2          //
1040   2          //    }
1041   2          clear_key_value(0x102e, &key_nb);
1042   2          temp_module_index = 0;
1043   2          //    j = (p_module_scene->scene_name_index-1)*8+((p->index)/8);
1044   2          j = ((p->index) / 8);
1045   2          // USER_PRINTF("p_module_scene->scene_name_index -->%bd\n", p_module_scene->scene_name_index);
1046   2          // USER_PRINTF("p->index -->%bd\n", p->index);
1047   2          // USER_PRINTF("module_scene_select_key_bak[%d] is %bd\n", j, module_scene_select_key_bak[(p_module_scen
             -e->scene_name_index - 1) + ((p->index) / 8)]);
1048   2          pic_set(scene_infor_page);  
1049   2        }
1050   1      }
1051          // ÃÌº”≥°æ∞–Ú∫≈
1052          void scene_name_add(name_scene_t *p_module_scene)
1053          {
1054   1        p_module_scene->scene_name_index = get_blank_scene_name_index() + 1;
1055   1        // USER_PRINTF("-->current_scene_name_index is %bd\n", p_module_scene->scene_name_index);
1056   1        clear_temp_scenc_infor();
1057   1        clear_all_scene_infor();
1058   1        memset((unsigned char *)module_scene_select_key_bak, 0, 8);
1059   1        clear_all_module_var_en(0x1200, SCENE_NUB_SIGNLE);
1060   1        p_module_scene->edit_sta = 1;
1061   1        // pic_page = SINGLE_SCENE_INFOR_LIST_FIRST_PAGE;
1062   1      }
1063          // ≥°æ∞–ﬁ∏ƒ
1064          void scene_name_modify(name_scene_t *p_module_scene)
1065          {
1066   1        //  p_module_scene->scene_name_index = 0;
1067   1        unsigned char index = 0;
1068   1        unsigned char i = 0, j = 0;
1069   1      
1070   1        index = get_scene_name_select_sequence_number() - 1;
1071   1        //  USER_PRINTF("name_scene.edit_sta is %bd\n",module_scene.edit_sta);
1072   1        USER_PRINTF("scene_name_modify index is %bd\n", index);
1073   1        if (BLANK == if_scene_name_exists(index))
1074   1        {
1075   2          return;
1076   2        }
1077   1        // pic_page = SINGLE_SCENE_INFOR_LIST_FIRST_PAGE;
1078   1        pic_set(SINGLE_SCENE_INFOR_LIST_FIRST_PAGE);
1079   1      
1080   1        scene_name_read_flash(p_module_scene, index);
1081   1      
1082   1        printf_tab(8, &p_module_scene->module_select);
1083   1        norflash_read(SCENE_INFOR_FLASH_ADR_SATRT + (index)*SINGLE_NAME_SCENC_INFOR_SIZE, (unsigned char *)(temp_
             -scenc_infor), SINGLE_NAME_SCENC_INFOR_SIZE);
1084   1        memcpy((unsigned char *)&module_scene_select_key_bak, (unsigned char *)&(p_module_scene->module_select), 
             -8);
1085   1        printf_tab(8, &module_scene_select_key_bak);
1086   1        for (i = 0; i < 8; i++)
1087   1        {
1088   2          for (j = 0; j < 8; j++)
1089   2          {
1090   3            if (GET_BIT(module_scene_select_key_bak[i], j))
1091   3            {
1092   4              write_dgus(0X1200 + i * 8 + j, 1);
1093   4            }
1094   3            else
1095   3            {
1096   4              write_dgus(0X1200 + i * 8 + j, 0);
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 20  

1097   4            }
1098   3          }
1099   2        }
1100   1      
1101   1        for (i = 0; i < SCENE_NUB_SIGNLE; i++)
1102   1        {
1103   2          if (FULL == (temp_scenc_infor + i)->data_sta)
1104   2            display_scene_infor(temp_scenc_infor + i);
1105   2          else
1106   2            clear_single_scene(i);
1107   2        }
1108   1        p_module_scene->edit_sta = 4;
1109   1        //  USER_PRINTF("name_scene.edit_sta is %bd\n",module_scene.edit_sta);
1110   1      }
1111          // ≥°æ∞«Â≥˝
1112          void scene_name_clear(name_scene_t *p_module_scene)
1113          {
1114   1      
1115   1        scene_name_clear_flash();
1116   1        clear_scene_list_name();
1117   1        USER_PRINTF("clear_scene_name_flash \n");
1118   1        memset((unsigned char *)module_scene_select_key_bak, 0, 8);
1119   1        memset((unsigned char *)p_module_scene->module_select, 0, 8);
1120   1        mbHost.scene_send_cyc_time = 200;
1121   1        scene_data.scenc_send_name_cyc_flag = 1;
1122   1        p_module_scene->edit_sta = 3;
1123   1      }
1124          // ≥°æ∞…æ≥˝
1125          void scene_name_delete(name_scene_t *p_module_scene)
1126          {
1127   1        scene_name_delete_flash(p_module_scene->scene_name_index - 1);
1128   1        delete_scene_list_name(p_module_scene->scene_name_index - 1);
1129   1        USER_PRINTF("delete_single_scene_name_flash \n");
1130   1        memset((unsigned char *)module_scene_select_key_bak, 0, 8);
1131   1        memset((unsigned char *)p_module_scene->module_select, 0, 8);
1132   1        //  mbHost.scene_send_cyc_time  = 200;
1133   1        //  scene_data.scenc_send_name_cyc_flag  = 1;
1134   1        p_module_scene->edit_sta = 2;
1135   1      }
1136          // ≥°æ∞√˚≥∆¡–±Ìøÿ÷∆≤Ÿ◊˜
1137          void scene_name_key_ctrl(name_scene_t *p_module_scene)
1138          {
1139   1        unsigned short key_nb = 0;
1140   1        unsigned char edit_sta = 0;
1141   1        //  unsigned short index = 0;
1142   1        get_key_value(0x1072, &key_nb);
1143   1        if ((key_nb))
1144   1        {
1145   2          switch (key_nb)
1146   2          {
1147   3          case 1: // ÃÌº”
1148   3            scene_name_add(p_module_scene);
1149   3            
1150   3            break;
1151   3          case 3: // –ﬁ∏ƒ
1152   3            //        edit_sta = 2;
1153   3            //        memcpy(get_module_scene_module_select());
1154   3            scene_name_modify(p_module_scene);
1155   3            break;
1156   3          }
1157   2          clear_key_value(0x1072, &key_nb);
1158   2        }
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 21  

1159   1        get_key_value(0x1073, &key_nb); // ≥°æ∞√˚≥∆«Âø’
1160   1        if ((1 == key_nb))
1161   1        {
1162   2          clear_key_value(0x1073, &key_nb);
1163   2          pop_menu_key_ctrl(1);
1164   2      
1165   2          scene_name_clear(p_module_scene);
1166   2          USER_PRINTF("scene name clear ok!\n");
1167   2          //    USER_PRINTF("clear_scene_name \n");
1168   2      
1169   2          //    pop_menu_0xb0(read_pic(),1,17);
1170   2        }
1171   1        get_key_value(0x1074, &key_nb); // ≥°æ∞√˚≥∆…æ≥˝
1172   1        if ((1 == key_nb))
1173   1        {
1174   2          clear_key_value(0x1074, &key_nb);
1175   2      
1176   2          p_module_scene->scene_name_index = get_scene_name_select_sequence_number();
1177   2          if (BLANK == if_scene_name_exists(p_module_scene->scene_name_index - 1))
1178   2          {
1179   3            return;
1180   3          }
1181   2          if (0 == p_module_scene->scene_name_index)
1182   2            return;
1183   2          pop_menu_key_ctrl(1);
1184   2          norflash_read(SCENE_INFOR_FLASH_ADR_SATRT + (get_scene_name_select_sequence_number() - 1) * SINGLE_NAME_
             -SCENC_INFOR_SIZE, (unsigned char *)(temp_scenc_infor), SINGLE_NAME_SCENC_INFOR_SIZE);
1185   2          scene_name_delete(p_module_scene);
1186   2          USER_PRINTF("scene name delete ok!\n");
1187   2      
1188   2          //    pop_menu_0xb0(read_pic(),1,17);
1189   2        }
1190   1      }
1191          
1192          // ≥°æ∞–≈œ¢¡–±Ì»∑»œ±£¥Ê
1193          void scene_infor_confirm_ctrl(name_scene_t *p_module_scene)
1194          {
1195   1        if (0xff == if_all_scene_infor_blank()) // Œ¥ÃÌº”≥°æ∞ƒ£øÈ–≈œ¢
1196   1        {
1197   2          return;
1198   2        }
1199   1        mbHost.scene_send_cyc_time = 200;
1200   1        scene_data.scenc_send_infor_cyc_flag = 1;
1201   1        pop_menu_key_ctrl(1);
1202   1        USER_PRINTF("-->scene_infor_confirm_ctrl \n");
1203   1        scene_infor_save_flash(p_module_scene);
1204   1        scene_name_save(p_module_scene);
1205   1        if (p_module_scene->scene_name_index > 6)
1206   1        {
1207   2          pic_page = SINGLE_SCENE_NAME_MANGE_SECOND_PAGE + p_module_scene->scene_name_index / 6 - 1;
1208   2          pic_set(pic_page);
1209   2          
1210   2        }
1211   1        else
1212   1        {
1213   2          pic_page = SINGLE_SCENE_NAME_MANGE_FIRST_PAGE;
1214   2          pic_set(pic_page);
1215   2        }
1216   1        // if()
1217   1      }
1218          // ≥°æ∞–≈œ¢¡–±Ì»°œ˚±£¥Ê
1219          void scene_infor_cancel_ctrl(name_scene_t *p_module_scene, scenc_infor_t *p_scenc_infor)
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 22  

1220          {
1221   1        memset((unsigned char *)module_scene_select_key_bak, 0, 8);
1222   1        clear_temp_scenc_infor();                                         // «Âø’¡Ÿ ±≥°æ∞–≈œ¢±‰¡ø
1223   1        memset((unsigned char *)p_scenc_infor, 0, sizeof(scenc_infor_t)); // «Âø’≥°æ∞–≈œ¢±‰¡ø
1224   1        memset((unsigned char *)p_module_scene, 0, sizeof(name_scene_t)); // «Âø’≥°æ∞√˚◊÷±‰¡ø
1225   1        clear_all_scene_infor();                                          // «Âø’≥°æ∞–≈œ¢œ‘ æ
1226   1        clear_all_module_var_en(0x1200, SCENE_NUB_SIGNLE);
1227   1        pic_set(pic_page);
1228   1      }
1229          ////≥°æ∞–≈œ¢¡–±Ì«Âø’∑¢ÀÕ…æ≥˝≥°æ∞÷∏¡Ó
1230          // void scene_infor_clear_send(name_scene_t *p_module_scene,scenc_infor_t *p_scenc_infor)
1231          //{
1232          ////  if(2 == get_module_scene_edit_sta())//»Áπ˚¥¶”⁄–ﬁ∏ƒ≥°æ∞◊¥Ã¨£¨–Ë“™œ¬∑¢÷∏¡Ó…æ≥˝À˘”–≥°æ∞
1233          ////  {
1234          ////    scene_name_delete(p_module_scene);
1235          ////    scene_infor_clear_flash(p_scenc_infor);
1236          ////  }
1237          ////  else
1238          ////  {
1239          ////
1240          ////  }
1241          //}
1242          // ≥°æ∞–≈œ¢¡–±Ì«Âø’
1243          void scene_infor_clear_ctrl(name_scene_t *p_module_scene, scenc_infor_t *p_scenc_infor)
1244          {
1245   1        //  if(2 == get_module_scene_edit_sta())//»Áπ˚¥¶”⁄–ﬁ∏ƒ≥°æ∞◊¥Ã¨£¨–Ë“™œ¬∑¢÷∏¡Ó…æ≥˝À˘”–≥°æ∞
1246   1        //  {
1247   1        //    (temp_scenc_infor+p_scenc_infor->index)->edit_sta = 2;
1248   1        //    module_relay_scene_send(temp_scenc_infor+p_scenc_infor->index);
1249   1        //    module_dim_scene_send(temp_scenc_infor+p_scenc_infor->index);
1250   1        //  }
1251   1        memset((unsigned char *)module_scene_select_key_bak, 0, 8);
1252   1        clear_temp_scenc_infor();                                         // «Âø’¡Ÿ ±≥°æ∞–≈œ¢±‰¡ø
1253   1        memset((unsigned char *)p_scenc_infor, 0, sizeof(scenc_infor_t)); // «Âø’≥°æ∞–≈œ¢±‰¡ø
1254   1        memset((unsigned char *)p_module_scene, 0, sizeof(name_scene_t)); // «Âø’≥°æ∞√˚◊÷±‰¡ø
1255   1        clear_all_scene_infor();                                          // «Âø’≥°æ∞–≈œ¢œ‘ æ
1256   1        clear_all_module_var_en(0x1200, SCENE_NUB_SIGNLE);
1257   1      }
1258          // ≥°æ∞–≈œ¢¡–±Ì–ﬁ∏ƒ
1259          void scene_infor_modify_ctrl(scenc_infor_t *p_scenc_infor)
1260          {
1261   1        unsigned char index = 0;
1262   1        //  module_t temp_module = {0};
1263   1        p_scenc_infor->edit_sta = 0x51; // ÃÌº”–ﬁ∏ƒ
1264   1        index = get_scene_infor_select_sequence_number();
1265   1        //  USER_PRINTF("-->get_scene_infor_select_sequence_number is bd\n",index);
1266   1        p_scenc_infor->index = get_scene_infor_select_sequence_number() - 1;
1267   1        // USER_PRINTF("-->current scene infor select index is d\n", p_scenc_infor->index);
1268   1        if (BLANK == (temp_scenc_infor + p_scenc_infor->index)->data_sta)
1269   1          return;
1270   1        p_scenc_infor->edit_sta = 0x51; // ÃÌº”–ﬁ∏ƒ
1271   1        // USER_PRINTF("-->current scene infor select index is %d\n", p_scenc_infor->index);
1272   1      
1273   1        norflash_read((temp_scenc_infor + p_scenc_infor->index)->module_index * 140, (unsigned char *)&st_module,
             - 140);
1274   1        //  temp_module_index_bak = st_module.index;
1275   1        //  USER_PRINTF("scene_modify_module_index is %bd\n",temp_module_index_bak);
1276   1        //  CLEAR_BIT(module_scene_select_key_bak[(p_scenc_infor->scene_infor_index-1)*(((temp_scenc_infor+index)-
             ->module_index-1)/8)],((temp_scenc_infor+index)->module_index-1)%8);
1277   1        display_scene_interface(&st_module);
1278   1        module_scene_infor_dis(temp_scenc_infor + p_scenc_infor->index);
1279   1      }
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 23  

1280          // ≥°æ∞–≈œ¢¡–±Ì…æ≥˝
1281          void scene_infor_delete_ctrl(scenc_infor_t *p_scenc_infor)
1282          {
1283   1        unsigned char index = 0;
1284   1        //  USER_PRINTF("-->delete_p_scenc_infor->index %bx\n",p_scenc_infor->index);
1285   1        //  if(BLANK == (temp_scenc_infor+p_scenc_infor->index)->data_sta)
1286   1        //    return;
1287   1        index = get_scene_infor_select_sequence_number();
1288   1        if (0 == index)
1289   1        {
1290   2          return;
1291   2        }
1292   1        p_scenc_infor->index = index - 1;
1293   1        // USER_PRINTF("-->select_scene_infor_index is %d\n", p_scenc_infor->index);
1294   1        // USER_PRINTF("-->select_p_scenc_infor->module_index is %bd\n", p_scenc_infor->module_index);
1295   1        clear_single_scene(p_scenc_infor->index); // «Â≥˝—°÷–≥°æ∞–≈œ¢œ‘ æ
1296   1        if (4 == get_module_scene_edit_sta())     // »Áπ˚¥¶”⁄–ﬁ∏ƒ≥°æ∞◊¥Ã¨£¨–Ë“™œ¬∑¢÷∏¡Ó…æ≥˝≥°æ∞
1297   1        {
1298   2          (temp_scenc_infor + p_scenc_infor->index)->edit_sta = 2;
1299   2          module_relay_scene_send(temp_scenc_infor + p_scenc_infor->index);
1300   2          module_dim_scene_send(temp_scenc_infor + p_scenc_infor->index);
1301   2          scene_infor_delete_flash(temp_scenc_infor + p_scenc_infor->index);
1302   2      
1303   2          //    CLEAR_BIT(module_scene.module_select[p_scenc_infor->module_index/8],(p_scenc_infor->module_index)%8)
             -;
1304   2      
1305   2          CLEAR_BIT(module_scene_select_key_bak[((temp_scenc_infor + p_scenc_infor->index)->module_index) / 8], ((
             -temp_scenc_infor + p_scenc_infor->index)->module_index) % 8);
1306   2          CLEAR_BIT(module_scene.module_select[((temp_scenc_infor + p_scenc_infor->index)->module_index) / 8], ((t
             -emp_scenc_infor + p_scenc_infor->index)->module_index) % 8);
1307   2          scene_name_save_flash(&module_scene);
1308   2        }
1309   1        else
1310   1        {
1311   2          CLEAR_BIT(module_scene_select_key_bak[(temp_module_index - 1) / 8], (temp_module_index - 1) % 8);
1312   2        }
1313   1        memset((unsigned char *)(temp_scenc_infor + p_scenc_infor->index), 0, sizeof(scenc_infor_t)); // «Â≥˝≥°æ∞
             -–≈œ¢±‰¡ø
1314   1        memset((unsigned char *)p_scenc_infor, 0, sizeof(scenc_infor_t));                             // «Âø’≥°æ∞–≈œ¢±‰¡ø
1315   1      
1316   1        clear_single_module_var_en(0x1200 + p_scenc_infor->index);
1317   1        //  clear_all_module_var_en(SCENE_INFOR_LIST_SELECT_ADR,SCENE_NAME_NUB);
1318   1        USER_PRINTF("-->scene_infor_delete_ctrl\n");
1319   1      }
1320          // ≥°æ∞±‡º≠◊¥Ã¨«Âø’–≈œ¢
1321          void scene_edit_sta_clear_infor(name_scene_t *p_module_scene, scenc_infor_t *p_scenc_infor)
1322          {
1323   1        clear_all_module_var_en(0x1200, SCENE_NUB_SIGNLE);
1324   1        // USER_PRINTF("clear scene_name_index is %bd\n", p_module_scene->scene_name_index);
1325   1        T5L_Flash(0xA5, 0Xe000, SCENE_INFOR_FLASH_ADR_SATRT + (p_module_scene->scene_name_index - 1) * SINGLE_NAM
             -E_SCENC_INFOR_SIZE, SINGLE_NAME_SCENC_INFOR_SIZE); // –¥0FLASHscencinfor«Â≥˝
1326   1        clear_all_scene_infor();                                                                                                                                    // «Âø’≥°æ∞¡–±Ì
             -–≈œ¢œ‘ æ
1327   1        memset((unsigned char *)module_scene_select_key_bak, 0, 8);
1328   1        memset((unsigned char *)p_scenc_infor, 0, sizeof(scenc_infor_t)); // «Âø’≥°æ∞–≈œ¢±‰¡ø
1329   1        memset((unsigned char *)p_module_scene->module_select, 0, 8);
1330   1        scene_name_save_flash(&module_scene);
1331   1        p_module_scene->edit_sta = 2;
1332   1        infor_clear_sta = 1;
1333   1        USER_PRINTF("-->clear single scene name information\n");
1334   1      
1335   1        //  memset((unsigned char *)module_scene_select_key_bak,0,8);
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 24  

1336   1        //  clear_temp_scenc_infor();//«Âø’¡Ÿ ±≥°æ∞–≈œ¢±‰¡ø
1337   1        //  memset((unsigned char *)p_scenc_infor,0,sizeof(scenc_infor_t));//«Âø’≥°æ∞–≈œ¢±‰¡ø
1338   1        //  memset((unsigned char *)p_module_scene,0,sizeof(name_scene_t));//«Âø’≥°æ∞√˚◊÷±‰¡ø
1339   1        //  clear_all_scene_infor();//«Âø’≥°æ∞–≈œ¢œ‘ æ
1340   1        //  clear_all_module_var_en(0x1200,SCENE_NUB_SIGNLE);
1341   1      }
1342          
1343          // ≥°æ∞–≈œ¢¡–±Ì∞¥º¸øÿ÷∆
1344          void scene_infor_key_ctrl(name_scene_t *p_module_scene, scenc_infor_t *p_scenc_infor)
1345          {
1346   1        unsigned short key_nb = 0;
1347   1        get_key_value(0x1071, &key_nb);
1348   1        if ((key_nb))
1349   1        {
1350   2          //    set_scene_infor_edit_sta(p_scenc_infor,key_nb);
1351   2          switch (key_nb)
1352   2          {
1353   3          case CONFIRM:
1354   3      
1355   3            scene_infor_confirm_ctrl(p_module_scene);
1356   3            break;
1357   3          case CANCEL:
1358   3            scene_infor_cancel_ctrl(p_module_scene, p_scenc_infor);
1359   3            break;
1360   3          case ADD:
1361   3            p_scenc_infor->edit_sta = 0x31; // ÃÌº”–ﬁ∏ƒ
1362   3            scene_infor_page = SINGLE_SCENE_INFOR_LIST_FIRST_PAGE;
1363   3            break;
1364   3          case CLEAR:
1365   3            //        p_scenc_infor->edit_sta = 0x43;//«Âø’
1366   3      
1367   3            break;
1368   3          case MODIFY:
1369   3      
1370   3            scene_infor_modify_ctrl(p_scenc_infor);
1371   3            break;
1372   3          case DELETE:
1373   3            //        p_scenc_infor->edit_sta = 0x62;//…æ≥˝
1374   3      
1375   3            break;
1376   3          default:
1377   3            break;
1378   3          }
1379   2          clear_key_value(0x1071, &key_nb);
1380   2        }
1381   1        /***
1382   1        Ω¯»Î–ﬁ∏ƒ≥°æ∞ƒ£ Ω ±£¨…æ≥˝ªÚ’ﬂ«Âø’≥°æ∞–≈œ¢£¨–Ë“™œ¬∑¢∂‘”¶µƒmodbus ÷∏¡Ó
1383   1        **/
1384   1        get_key_value(0x1075, &key_nb); // ≥°æ∞–≈œ¢«Âø’
1385   1        if ((1 == key_nb))
1386   1        {
1387   2          if (4 == get_module_scene_edit_sta()) // »Áπ˚¥¶”⁄–ﬁ∏ƒ≥°æ∞◊¥Ã¨£¨–Ë“™œ¬∑¢÷∏¡Ó…æ≥˝À˘”–≥°æ∞
1388   2          {
1389   3            USER_PRINTF("-->scene edit sta need to clear scene information!\n");
1390   3            scene_edit_sta_clear_infor(p_module_scene, p_scenc_infor);
1391   3            //      scene_name_delete(p_module_scene);
1392   3            //      scene_infor_clear_flash(p_scenc_infor);
1393   3          }
1394   2          else
1395   2          {
1396   3            scene_infor_clear_ctrl(p_module_scene, p_scenc_infor);
1397   3          }
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 25  

1398   2          //    scene_infor_clear_send(p_module_scene,p_scenc_infor);
1399   2          //
1400   2          clear_key_value(0x1075, &key_nb);
1401   2        }
1402   1        get_key_value(0x1076, &key_nb); // ≥°æ∞–≈œ¢…æ≥˝
1403   1        if ((1 == key_nb))
1404   1        {
1405   2          scene_infor_delete_ctrl(p_scenc_infor);
1406   2          clear_key_value(0x1076, &key_nb);
1407   2        }
1408   1      }
1409          //…Ë÷√≥°æ∞–≈œ¢¡–±ÌΩÁ√Ê
1410          void set_scene_infor_page(void)
1411          {
1412   1        unsigned short key_nb = 0;
1413   1        get_key_value(0x1b25, &key_nb);
1414   1        if (key_nb)
1415   1        {
1416   2          scene_infor_page = key_nb;
1417   2          clear_key_value(0x1b25, &key_nb);
1418   2        }
1419   1      }
1420          // ≥°æ∞≈‰÷√
1421          void scene_modify(void)
1422          {
1423   1        //  unsigned short page = 0;
1424   1        //  page = read_dgus(0x14);
1425   1        //  USER_PRINTF("module_scene.scene_name_index -->%bd\n",module_scene.scene_name_index);
1426   1      
1427   1        scene_name_key_ctrl(&module_scene);
1428   1        add_module_scene_infor(&st_module, &scenc_infor, &module_scene);
1429   1        module_scene_select_ctrl(&scenc_infor);
1430   1      
1431   1        scene_infor_key_ctrl(&module_scene, &scenc_infor);
1432   1        set_scene_infor_page();
1433   1      }
1434          // void scene_key_run(void)
1435          //{
1436          //  scene_infor_key_ctrl((temp_scenc_infor+scenc_infor.index),&module_scene);
1437          // }
1438          // ¥•√˛…˘“Ùøÿ÷∆
1439          void beep_ctrl(unsigned char enable)
1440          {
1441   1        unsigned char config_sys_cmd_80[4] = {0};
1442   1        read_dgusii_vp(0x80, config_sys_cmd_80, 2);
1443   1        sys_delay_about_ms(5);
1444   1        if (enable)
1445   1          config_sys_cmd_80[3] |= (1 << 3);
1446   1        else
1447   1          config_sys_cmd_80[3] &= ~(1 << 3);
1448   1        config_sys_cmd_80[0] = 0x5a;
1449   1        write_dgusii_vp(0x80, config_sys_cmd_80, 2);
1450   1        while (config_sys_cmd_80[0])
1451   1        {
1452   2          read_dgusii_vp(0x80, config_sys_cmd_80, 2);
1453   2        }
1454   1      }
1455          // ∆¡ƒª◊‘∂Ø¥˝ª˙–›√ﬂøÿ÷∆
1456          void back_light_ctrl(unsigned char enable)
1457          {
1458   1        unsigned char config_sys_cmd_80[4] = {0};
1459   1        read_dgusii_vp(0x80, config_sys_cmd_80, 2);
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 26  

1460   1        sys_delay_about_ms(5);
1461   1        if (enable)
1462   1          config_sys_cmd_80[3] |= (1 << 2);
1463   1        else
1464   1          config_sys_cmd_80[3] &= ~(1 << 2);
1465   1        config_sys_cmd_80[0] = 0x5a;
1466   1        write_dgusii_vp(0x80, config_sys_cmd_80, 2);
1467   1        while (config_sys_cmd_80[0])
1468   1        {
1469   2          read_dgusii_vp(0x80, config_sys_cmd_80, 2);
1470   2        }
1471   1      }
1472          // ¥•√˛∆¡±≥π‚¡¡∂»,◊‘∂Ø–›√ﬂ ±º‰…Ë÷√
1473          // work_light:’˝≥£π§◊˜ ±µƒ±≥π‚¡¡∂»,∑∂Œß:[0,100]
1474          // sleep_light:–›√ﬂ ±µƒ±≥π‚¡¡∂»,∑∂Œß:[0,100]
1475          // sleep_interval:Œﬁ»Œ∫Œ≤Ÿ◊˜,∏Ùsleep_interval*10ms∫Ûª·◊‘∂ØΩ¯»Î–›√ﬂ◊¥Ã¨
1476          void sys_led_config(unsigned char work_light, unsigned char sleep_light, unsigned short sleep_interval)
1477          {
1478   1      #define LED_CONFIG_ADDR 0x82
1479   1        unsigned char led_cmd[4] = {0};
1480   1        led_cmd[0] = work_light > 1 ? work_light : 1;
1481   1        led_cmd[1] = sleep_light;
1482   1        led_cmd[2] = sleep_interval >> 8;
1483   1        led_cmd[3] = sleep_interval & 0xff;
1484   1        write_dgusii_vp(LED_CONFIG_ADDR, led_cmd, 2);
1485   1        //  while(led_cmd[0])
1486   1        //  {
1487   1        //    read_dgusii_vp(LED_CONFIG_ADDR,led_cmd,2);
1488   1        //  }
1489   1      }
1490          // µØ≥ˆ≤Àµ•…Ë÷√
1491          void pop_menu_key_ctrl(unsigned char menu_key_value)
1492          {
1493   1        unsigned char temp_tab[8] = {0};
1494   1        unsigned char beep_enable = 0;
1495   1        beep_ctrl(0);
1496   1        temp_tab[0] = 0x5a;
1497   1        temp_tab[1] = 0xa5;
1498   1        temp_tab[2] = 0x00;
1499   1        temp_tab[3] = 0x04;
1500   1        temp_tab[4] = 0xff;
1501   1        temp_tab[5] = menu_key_value;
1502   1        temp_tab[6] = 0x00;
1503   1        temp_tab[7] = 1;
1504   1        sys_delay_about_ms(2);
1505   1        write_dgusii_vp(0xd4, temp_tab, 4);
1506   1        sys_delay_about_ms(2);
1507   1        beep_enable = read_dgus(BEEP_ENABLE_DGUS_ADR);
1508   1        // USER_PRINTF("-->beep_enable is %bd\n", beep_enable);
1509   1        //  sys_delay_about_ms(2);
1510   1        beep_ctrl(beep_enable); // control∑‰√˘∆˜…˘“Ù
1511   1        sys_delay_about_ms(2);
1512   1      }
1513          // ≥°æ∞¥•√˛÷¥––
1514          void scene_touch_run(void)
1515          {
1516   1        unsigned short key_nb = 0;
1517   1        static unsigned char action_sta[SCENE_NAME_NUB] = {1};
1518   1        name_scene_t module_scene_r = {0};
1519   1        get_key_value(0x102d, &key_nb);
1520   1        if ((key_nb))
1521   1        {
C51 COMPILER V9.60.0.0   SCENE                                                             09/27/2023 17:05:16 PAGE 27  

1522   2          //    nor_read_flash
1523   2          norflash_read(MODULE_FLASH_ADR_END + (key_nb - 1) * NAME_SCENE_T_SIZE, (unsigned char *)&module_scene_r,
             - NAME_SCENE_T_SIZE);
1524   2          if (FULL == module_scene_r.data_sta)
1525   2          {
1526   3            action_sta[key_nb - 1] = 0;
1527   3            set_master_send_hr(master_send_hr, 7, key_nb);
1528   3            set_master_send_hr(master_send_hr, 8, action_sta[key_nb - 1] + 1);
1529   3            pack_data_send(&user_modbus, 0, MD_FR_MHR, 7, 2);
1530   3          }
1531   2          clear_key_value(0x102d, &key_nb);
1532   2        }
1533   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   9492    ----
   CONSTANT SIZE    =   1593    ----
   XDATA SIZE       =   1830    1059
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
